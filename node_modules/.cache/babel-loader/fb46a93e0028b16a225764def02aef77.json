{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend\\\\src\\\\components\\\\AuthenticatedRoute.js\";\n\n/**\r\n * We would want certain routes like /courses to be accessed only by authenticated users.\r\n *\r\n * AuthenticationRoute helps us implement this.\r\n */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from '../service/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthenticatedRoute(props) {\n  if (AuthenticationService.isUserLoggedIn()) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_c = AuthenticatedRoute;\nexport default AuthenticatedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["C:/frontend/src/components/AuthenticatedRoute.js"],"names":["React","Route","Redirect","AuthenticationService","AuthenticatedRoute","props","isUserLoggedIn"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEC,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAE/B,MAAIF,qBAAqB,CAACG,cAAtB,EAAJ,EAA4C;AACxC,wBAAO,QAAC,KAAD,OAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;KAPQD,kB;AAQT,eAAeA,kBAAf","sourcesContent":["/**\r\n * We would want certain routes like /courses to be accessed only by authenticated users.\r\n *\r\n * AuthenticationRoute helps us implement this.\r\n */\r\n\r\n import React from 'react'\r\n import { Route, Redirect } from 'react-router-dom'\r\n import AuthenticationService from '../service/AuthenticationService';\r\n function AuthenticatedRoute(props) {\r\n \r\n     if (AuthenticationService.isUserLoggedIn()) {\r\n         return <Route {...props} />\r\n     } else {\r\n         return <Redirect to=\"/login\" />\r\n     }\r\n }\r\n export default AuthenticatedRoute"]},"metadata":{},"sourceType":"module"}