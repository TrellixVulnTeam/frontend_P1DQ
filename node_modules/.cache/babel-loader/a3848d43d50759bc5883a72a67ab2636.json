{"ast":null,"code":"'use strict';\n\nvar domain = require('domain');\n\nvar eos = require('end-of-stream');\n\nvar p = require('process-nextick-args');\n\nvar once = require('once');\n\nvar exhaust = require('stream-exhaust');\n\nvar eosConfig = {\n  error: false\n};\n\nfunction rethrowAsync(err) {\n  process.nextTick(rethrow);\n\n  function rethrow() {\n    throw err;\n  }\n}\n\nfunction tryCatch(fn, args) {\n  try {\n    return fn.apply(null, args);\n  } catch (err) {\n    rethrowAsync(err);\n  }\n}\n\nfunction asyncDone(fn, cb) {\n  cb = once(cb);\n  var d = domain.create();\n  d.once('error', onError);\n  var domainBoundFn = d.bind(fn);\n\n  function done() {\n    d.removeListener('error', onError);\n    d.exit();\n    return tryCatch(cb, arguments);\n  }\n\n  function onSuccess(result) {\n    done(null, result);\n  }\n\n  function onError(error) {\n    if (!error) {\n      error = new Error('Promise rejected without Error');\n    }\n\n    done(error);\n  }\n\n  function asyncRunner() {\n    var result = domainBoundFn(done);\n\n    function onNext(state) {\n      onNext.state = state;\n    }\n\n    function onCompleted() {\n      onSuccess(onNext.state);\n    }\n\n    if (result && typeof result.on === 'function') {\n      // Assume node stream\n      d.add(result);\n      eos(exhaust(result), eosConfig, done);\n      return;\n    }\n\n    if (result && typeof result.subscribe === 'function') {\n      // Assume RxJS observable\n      result.subscribe(onNext, onError, onCompleted);\n      return;\n    }\n\n    if (result && typeof result.then === 'function') {\n      // Assume promise\n      result.then(onSuccess, onError);\n      return;\n    }\n  }\n\n  p.nextTick(asyncRunner);\n}\n\nmodule.exports = asyncDone;","map":{"version":3,"sources":["C:/frontend/node_modules/async-done/index.js"],"names":["domain","require","eos","p","once","exhaust","eosConfig","error","rethrowAsync","err","process","nextTick","rethrow","tryCatch","fn","args","apply","asyncDone","cb","d","create","onError","domainBoundFn","bind","done","removeListener","exit","arguments","onSuccess","result","Error","asyncRunner","onNext","state","onCompleted","on","add","subscribe","then","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar domain = require('domain');\r\n\r\nvar eos = require('end-of-stream');\r\nvar p = require('process-nextick-args');\r\nvar once = require('once');\r\nvar exhaust = require('stream-exhaust');\r\n\r\nvar eosConfig = {\r\n  error: false,\r\n};\r\n\r\nfunction rethrowAsync(err) {\r\n  process.nextTick(rethrow);\r\n\r\n  function rethrow() {\r\n    throw err;\r\n  }\r\n}\r\n\r\nfunction tryCatch(fn, args) {\r\n  try {\r\n    return fn.apply(null, args);\r\n  } catch (err) {\r\n    rethrowAsync(err);\r\n  }\r\n}\r\n\r\nfunction asyncDone(fn, cb) {\r\n  cb = once(cb);\r\n\r\n  var d = domain.create();\r\n  d.once('error', onError);\r\n  var domainBoundFn = d.bind(fn);\r\n\r\n  function done() {\r\n    d.removeListener('error', onError);\r\n    d.exit();\r\n    return tryCatch(cb, arguments);\r\n  }\r\n\r\n  function onSuccess(result) {\r\n    done(null, result);\r\n  }\r\n\r\n  function onError(error) {\r\n    if (!error) {\r\n      error = new Error('Promise rejected without Error');\r\n    }\r\n    done(error);\r\n  }\r\n\r\n  function asyncRunner() {\r\n    var result = domainBoundFn(done);\r\n\r\n    function onNext(state) {\r\n      onNext.state = state;\r\n    }\r\n\r\n    function onCompleted() {\r\n      onSuccess(onNext.state);\r\n    }\r\n\r\n    if (result && typeof result.on === 'function') {\r\n      // Assume node stream\r\n      d.add(result);\r\n      eos(exhaust(result), eosConfig, done);\r\n      return;\r\n    }\r\n\r\n    if (result && typeof result.subscribe === 'function') {\r\n      // Assume RxJS observable\r\n      result.subscribe(onNext, onError, onCompleted);\r\n      return;\r\n    }\r\n\r\n    if (result && typeof result.then === 'function') {\r\n      // Assume promise\r\n      result.then(onSuccess, onError);\r\n      return;\r\n    }\r\n  }\r\n\r\n  p.nextTick(asyncRunner);\r\n}\r\n\r\nmodule.exports = asyncDone;\r\n"]},"metadata":{},"sourceType":"script"}