{"ast":null,"code":"'use strict';\n\nvar initial = require('array-initial');\n\nvar last = require('array-last');\n\nvar asyncDone = require('async-done');\n\nvar nowAndLater = require('now-and-later');\n\nvar helpers = require('./helpers');\n\nfunction iterator(fn, key, cb) {\n  return asyncDone(fn, cb);\n}\n\nfunction buildParallel() {\n  var args = helpers.verifyArguments(arguments);\n  var extensions = helpers.getExtensions(last(args));\n\n  if (extensions) {\n    args = initial(args);\n  }\n\n  function parallel(done) {\n    nowAndLater.map(args, iterator, extensions, done);\n  }\n\n  return parallel;\n}\n\nmodule.exports = buildParallel;","map":{"version":3,"sources":["C:/frontend/node_modules/bach/lib/parallel.js"],"names":["initial","require","last","asyncDone","nowAndLater","helpers","iterator","fn","key","cb","buildParallel","args","verifyArguments","arguments","extensions","getExtensions","parallel","done","map","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAII,OAAO,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AAEA,SAASK,QAAT,CAAkBC,EAAlB,EAAsBC,GAAtB,EAA2BC,EAA3B,EAA+B;AAC7B,SAAON,SAAS,CAACI,EAAD,EAAKE,EAAL,CAAhB;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,MAAIC,IAAI,GAAGN,OAAO,CAACO,eAAR,CAAwBC,SAAxB,CAAX;AAEA,MAAIC,UAAU,GAAGT,OAAO,CAACU,aAAR,CAAsBb,IAAI,CAACS,IAAD,CAA1B,CAAjB;;AAEA,MAAIG,UAAJ,EAAgB;AACdH,IAAAA,IAAI,GAAGX,OAAO,CAACW,IAAD,CAAd;AACD;;AAED,WAASK,QAAT,CAAkBC,IAAlB,EAAwB;AACtBb,IAAAA,WAAW,CAACc,GAAZ,CAAgBP,IAAhB,EAAsBL,QAAtB,EAAgCQ,UAAhC,EAA4CG,IAA5C;AACD;;AAED,SAAOD,QAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBV,aAAjB","sourcesContent":["'use strict';\r\n\r\nvar initial = require('array-initial');\r\nvar last = require('array-last');\r\nvar asyncDone = require('async-done');\r\nvar nowAndLater = require('now-and-later');\r\n\r\nvar helpers = require('./helpers');\r\n\r\nfunction iterator(fn, key, cb) {\r\n  return asyncDone(fn, cb);\r\n}\r\n\r\nfunction buildParallel() {\r\n  var args = helpers.verifyArguments(arguments);\r\n\r\n  var extensions = helpers.getExtensions(last(args));\r\n\r\n  if (extensions) {\r\n    args = initial(args);\r\n  }\r\n\r\n  function parallel(done) {\r\n    nowAndLater.map(args, iterator, extensions, done);\r\n  }\r\n\r\n  return parallel;\r\n}\r\n\r\nmodule.exports = buildParallel;\r\n"]},"metadata":{},"sourceType":"script"}