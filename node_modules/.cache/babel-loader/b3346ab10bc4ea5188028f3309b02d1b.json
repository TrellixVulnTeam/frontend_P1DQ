{"ast":null,"code":"'use strict';\n\nvar File = require('vinyl');\n\nvar helpers = require('./lib/helpers');\n\nvar PLUGIN_NAME = 'vinyl-sourcemap';\n\nfunction add(file, callback) {\n  // Bail early an error if the file argument is not a Vinyl file\n  if (!File.isVinyl(file)) {\n    return callback(new Error(PLUGIN_NAME + '-add: Not a vinyl file'));\n  } // Bail early with an error if file has streaming contents\n\n\n  if (file.isStream()) {\n    return callback(new Error(PLUGIN_NAME + '-add: Streaming not supported'));\n  } // Bail early successfully if file is null or already has a sourcemap\n\n\n  if (file.isNull() || file.sourceMap) {\n    return callback(null, file);\n  }\n\n  var state = {\n    path: '',\n    // Root path for the sources in the map\n    map: null,\n    content: file.contents.toString(),\n    // TODO: handle this?\n    preExistingComment: null\n  };\n  helpers.addSourceMaps(file, state, callback);\n}\n\nfunction write(file, destPath, callback) {\n  // Check if options or a callback are passed as second argument\n  if (typeof destPath === 'function') {\n    callback = destPath;\n    destPath = undefined;\n  } // Bail early with an error if the file argument is not a Vinyl file\n\n\n  if (!File.isVinyl(file)) {\n    return callback(new Error(PLUGIN_NAME + '-write: Not a vinyl file'));\n  } // Bail early with an error if file has streaming contents\n\n\n  if (file.isStream()) {\n    return callback(new Error(PLUGIN_NAME + '-write: Streaming not supported'));\n  } // Bail early successfully if file is null or doesn't have sourcemap\n\n\n  if (file.isNull() || !file.sourceMap) {\n    return callback(null, file);\n  }\n\n  helpers.writeSourceMaps(file, destPath, callback);\n}\n\nmodule.exports = {\n  add: add,\n  write: write\n};","map":{"version":3,"sources":["C:/frontend/node_modules/vinyl-sourcemap/index.js"],"names":["File","require","helpers","PLUGIN_NAME","add","file","callback","isVinyl","Error","isStream","isNull","sourceMap","state","path","map","content","contents","toString","preExistingComment","addSourceMaps","write","destPath","undefined","writeSourceMaps","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,OAAD,CAAlB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIE,WAAW,GAAG,iBAAlB;;AAEA,SAASC,GAAT,CAAaC,IAAb,EAAmBC,QAAnB,EAA6B;AAE3B;AACA,MAAI,CAACN,IAAI,CAACO,OAAL,CAAaF,IAAb,CAAL,EAAyB;AACvB,WAAOC,QAAQ,CAAC,IAAIE,KAAJ,CAAUL,WAAW,GAAG,wBAAxB,CAAD,CAAf;AACD,GAL0B,CAO3B;;;AACA,MAAIE,IAAI,CAACI,QAAL,EAAJ,EAAqB;AACnB,WAAOH,QAAQ,CAAC,IAAIE,KAAJ,CAAUL,WAAW,GAAG,+BAAxB,CAAD,CAAf;AACD,GAV0B,CAY3B;;;AACA,MAAIE,IAAI,CAACK,MAAL,MAAiBL,IAAI,CAACM,SAA1B,EAAqC;AACnC,WAAOL,QAAQ,CAAC,IAAD,EAAOD,IAAP,CAAf;AACD;;AAED,MAAIO,KAAK,GAAG;AACVC,IAAAA,IAAI,EAAE,EADI;AACA;AACVC,IAAAA,GAAG,EAAE,IAFK;AAGVC,IAAAA,OAAO,EAAEV,IAAI,CAACW,QAAL,CAAcC,QAAd,EAHC;AAIV;AACAC,IAAAA,kBAAkB,EAAE;AALV,GAAZ;AAQAhB,EAAAA,OAAO,CAACiB,aAAR,CAAsBd,IAAtB,EAA4BO,KAA5B,EAAmCN,QAAnC;AACD;;AAED,SAASc,KAAT,CAAef,IAAf,EAAqBgB,QAArB,EAA+Bf,QAA/B,EAAyC;AAEvC;AACA,MAAI,OAAOe,QAAP,KAAoB,UAAxB,EAAoC;AAClCf,IAAAA,QAAQ,GAAGe,QAAX;AACAA,IAAAA,QAAQ,GAAGC,SAAX;AACD,GANsC,CAQvC;;;AACA,MAAI,CAACtB,IAAI,CAACO,OAAL,CAAaF,IAAb,CAAL,EAAyB;AACvB,WAAOC,QAAQ,CAAC,IAAIE,KAAJ,CAAUL,WAAW,GAAG,0BAAxB,CAAD,CAAf;AACD,GAXsC,CAavC;;;AACA,MAAIE,IAAI,CAACI,QAAL,EAAJ,EAAqB;AACnB,WAAOH,QAAQ,CAAC,IAAIE,KAAJ,CAAUL,WAAW,GAAG,iCAAxB,CAAD,CAAf;AACD,GAhBsC,CAkBvC;;;AACA,MAAIE,IAAI,CAACK,MAAL,MAAiB,CAACL,IAAI,CAACM,SAA3B,EAAsC;AACpC,WAAOL,QAAQ,CAAC,IAAD,EAAOD,IAAP,CAAf;AACD;;AAEDH,EAAAA,OAAO,CAACqB,eAAR,CAAwBlB,IAAxB,EAA8BgB,QAA9B,EAAwCf,QAAxC;AACD;;AAEDkB,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,GAAG,EAAEA,GADU;AAEfgB,EAAAA,KAAK,EAAEA;AAFQ,CAAjB","sourcesContent":["'use strict';\r\n\r\nvar File = require('vinyl');\r\n\r\nvar helpers = require('./lib/helpers');\r\n\r\nvar PLUGIN_NAME = 'vinyl-sourcemap';\r\n\r\nfunction add(file, callback) {\r\n\r\n  // Bail early an error if the file argument is not a Vinyl file\r\n  if (!File.isVinyl(file)) {\r\n    return callback(new Error(PLUGIN_NAME + '-add: Not a vinyl file'));\r\n  }\r\n\r\n  // Bail early with an error if file has streaming contents\r\n  if (file.isStream()) {\r\n    return callback(new Error(PLUGIN_NAME + '-add: Streaming not supported'));\r\n  }\r\n\r\n  // Bail early successfully if file is null or already has a sourcemap\r\n  if (file.isNull() || file.sourceMap) {\r\n    return callback(null, file);\r\n  }\r\n\r\n  var state = {\r\n    path: '', // Root path for the sources in the map\r\n    map: null,\r\n    content: file.contents.toString(),\r\n    // TODO: handle this?\r\n    preExistingComment: null,\r\n  };\r\n\r\n  helpers.addSourceMaps(file, state, callback);\r\n}\r\n\r\nfunction write(file, destPath, callback) {\r\n\r\n  // Check if options or a callback are passed as second argument\r\n  if (typeof destPath === 'function') {\r\n    callback = destPath;\r\n    destPath = undefined;\r\n  }\r\n\r\n  // Bail early with an error if the file argument is not a Vinyl file\r\n  if (!File.isVinyl(file)) {\r\n    return callback(new Error(PLUGIN_NAME + '-write: Not a vinyl file'));\r\n  }\r\n\r\n  // Bail early with an error if file has streaming contents\r\n  if (file.isStream()) {\r\n    return callback(new Error(PLUGIN_NAME + '-write: Streaming not supported'));\r\n  }\r\n\r\n  // Bail early successfully if file is null or doesn't have sourcemap\r\n  if (file.isNull() || !file.sourceMap) {\r\n    return callback(null, file);\r\n  }\r\n\r\n  helpers.writeSourceMaps(file, destPath, callback);\r\n}\r\n\r\nmodule.exports = {\r\n  add: add,\r\n  write: write,\r\n};\r\n"]},"metadata":{},"sourceType":"script"}