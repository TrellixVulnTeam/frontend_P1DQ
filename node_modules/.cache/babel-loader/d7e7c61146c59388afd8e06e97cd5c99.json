{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"syntax-jsx\",\n\n    manipulateOptions(opts, parserOpts) {\n      if (parserOpts.plugins.some(p => (Array.isArray(p) ? p[0] : p) === \"typescript\")) {\n        return;\n      }\n\n      parserOpts.plugins.push(\"jsx\");\n    }\n\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["C:/frontend/node_modules/@babel/plugin-syntax-jsx/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_default","declare","api","assertVersion","name","manipulateOptions","opts","parserOpts","plugins","some","p","Array","isArray","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGF,kBAAkB,CAACG,OAAvB,EAAgCC,GAAG,IAAI;AACpDA,EAAAA,GAAG,CAACC,aAAJ,CAAkB,CAAlB;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE,YADD;;AAGLC,IAAAA,iBAAiB,CAACC,IAAD,EAAOC,UAAP,EAAmB;AAClC,UAAIA,UAAU,CAACC,OAAX,CAAmBC,IAAnB,CAAwBC,CAAC,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,CAAd,IAAmBA,CAAC,CAAC,CAAD,CAApB,GAA0BA,CAA3B,MAAkC,YAA/D,CAAJ,EAAkF;AAChF;AACD;;AAEDH,MAAAA,UAAU,CAACC,OAAX,CAAmBK,IAAnB,CAAwB,KAAxB;AACD;;AATI,GAAP;AAYD,CAdc,CAAf;;AAgBAlB,OAAO,CAACE,OAAR,GAAkBG,QAAlB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\r\n\r\nvar _default = (0, _helperPluginUtils.declare)(api => {\r\n  api.assertVersion(7);\r\n  return {\r\n    name: \"syntax-jsx\",\r\n\r\n    manipulateOptions(opts, parserOpts) {\r\n      if (parserOpts.plugins.some(p => (Array.isArray(p) ? p[0] : p) === \"typescript\")) {\r\n        return;\r\n      }\r\n\r\n      parserOpts.plugins.push(\"jsx\");\r\n    }\r\n\r\n  };\r\n});\r\n\r\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}