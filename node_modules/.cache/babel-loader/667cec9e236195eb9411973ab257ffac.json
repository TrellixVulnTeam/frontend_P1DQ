{"ast":null,"code":"'use strict';\n\nvar through = require('through2');\n\nvar fo = require('../file-operations');\n\nfunction resolveSymlinks(optResolver) {\n  // A stat property is exposed on file objects as a (wanted) side effect\n  function resolveFile(file, enc, callback) {\n    fo.reflectLinkStat(file.path, file, onReflect);\n\n    function onReflect(statErr) {\n      if (statErr) {\n        return callback(statErr);\n      }\n\n      if (!file.stat.isSymbolicLink()) {\n        return callback(null, file);\n      }\n\n      var resolveSymlinks = optResolver.resolve('resolveSymlinks', file);\n\n      if (!resolveSymlinks) {\n        return callback(null, file);\n      } // Get target's stats\n\n\n      fo.reflectStat(file.path, file, onReflect);\n    }\n  }\n\n  return through.obj(resolveFile);\n}\n\nmodule.exports = resolveSymlinks;","map":{"version":3,"sources":["C:/frontend/node_modules/vinyl-fs/lib/src/resolve-symlinks.js"],"names":["through","require","fo","resolveSymlinks","optResolver","resolveFile","file","enc","callback","reflectLinkStat","path","onReflect","statErr","stat","isSymbolicLink","resolve","reflectStat","obj","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,oBAAD,CAAhB;;AAEA,SAASE,eAAT,CAAyBC,WAAzB,EAAsC;AAEpC;AACA,WAASC,WAAT,CAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,QAAhC,EAA0C;AAExCN,IAAAA,EAAE,CAACO,eAAH,CAAmBH,IAAI,CAACI,IAAxB,EAA8BJ,IAA9B,EAAoCK,SAApC;;AAEA,aAASA,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,UAAIA,OAAJ,EAAa;AACX,eAAOJ,QAAQ,CAACI,OAAD,CAAf;AACD;;AAED,UAAI,CAACN,IAAI,CAACO,IAAL,CAAUC,cAAV,EAAL,EAAiC;AAC/B,eAAON,QAAQ,CAAC,IAAD,EAAOF,IAAP,CAAf;AACD;;AAED,UAAIH,eAAe,GAAGC,WAAW,CAACW,OAAZ,CAAoB,iBAApB,EAAuCT,IAAvC,CAAtB;;AAEA,UAAI,CAACH,eAAL,EAAsB;AACpB,eAAOK,QAAQ,CAAC,IAAD,EAAOF,IAAP,CAAf;AACD,OAbyB,CAe1B;;;AACAJ,MAAAA,EAAE,CAACc,WAAH,CAAeV,IAAI,CAACI,IAApB,EAA0BJ,IAA1B,EAAgCK,SAAhC;AACD;AACF;;AAED,SAAOX,OAAO,CAACiB,GAAR,CAAYZ,WAAZ,CAAP;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiBhB,eAAjB","sourcesContent":["'use strict';\r\n\r\nvar through = require('through2');\r\nvar fo = require('../file-operations');\r\n\r\nfunction resolveSymlinks(optResolver) {\r\n\r\n  // A stat property is exposed on file objects as a (wanted) side effect\r\n  function resolveFile(file, enc, callback) {\r\n\r\n    fo.reflectLinkStat(file.path, file, onReflect);\r\n\r\n    function onReflect(statErr) {\r\n      if (statErr) {\r\n        return callback(statErr);\r\n      }\r\n\r\n      if (!file.stat.isSymbolicLink()) {\r\n        return callback(null, file);\r\n      }\r\n\r\n      var resolveSymlinks = optResolver.resolve('resolveSymlinks', file);\r\n\r\n      if (!resolveSymlinks) {\r\n        return callback(null, file);\r\n      }\r\n\r\n      // Get target's stats\r\n      fo.reflectStat(file.path, file, onReflect);\r\n    }\r\n  }\r\n\r\n  return through.obj(resolveFile);\r\n}\r\n\r\nmodule.exports = resolveSymlinks;\r\n"]},"metadata":{},"sourceType":"script"}