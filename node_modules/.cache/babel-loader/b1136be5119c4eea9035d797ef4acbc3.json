{"ast":null,"code":"/*!\r\n * arr-filter <https://github.com/jonschlinkert/arr-filter>\r\n *\r\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n\nvar makeIterator = require('make-iterator');\n\nmodule.exports = function filter(arr, fn, thisArg) {\n  if (arr == null) {\n    return [];\n  }\n\n  if (typeof fn !== 'function') {\n    throw new TypeError('expected callback to be a function');\n  }\n\n  var iterator = makeIterator(fn, thisArg);\n  var len = arr.length;\n  var res = arr.slice();\n  var i = -1;\n\n  while (len--) {\n    if (!iterator(arr[len], i++)) {\n      res.splice(len, 1);\n    }\n  }\n\n  return res;\n};","map":{"version":3,"sources":["C:/frontend/node_modules/arr-filter/index.js"],"names":["makeIterator","require","module","exports","filter","arr","fn","thisArg","TypeError","iterator","len","length","res","slice","i","splice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,EAArB,EAAyBC,OAAzB,EAAkC;AACjD,MAAIF,GAAG,IAAI,IAAX,EAAiB;AACf,WAAO,EAAP;AACD;;AAED,MAAI,OAAOC,EAAP,KAAc,UAAlB,EAA8B;AAC5B,UAAM,IAAIE,SAAJ,CAAc,oCAAd,CAAN;AACD;;AAED,MAAIC,QAAQ,GAAGT,YAAY,CAACM,EAAD,EAAKC,OAAL,CAA3B;AACA,MAAIG,GAAG,GAAGL,GAAG,CAACM,MAAd;AACA,MAAIC,GAAG,GAAGP,GAAG,CAACQ,KAAJ,EAAV;AACA,MAAIC,CAAC,GAAG,CAAC,CAAT;;AAEA,SAAOJ,GAAG,EAAV,EAAc;AACZ,QAAI,CAACD,QAAQ,CAACJ,GAAG,CAACK,GAAD,CAAJ,EAAWI,CAAC,EAAZ,CAAb,EAA8B;AAC5BF,MAAAA,GAAG,CAACG,MAAJ,CAAWL,GAAX,EAAgB,CAAhB;AACD;AACF;;AACD,SAAOE,GAAP;AACD,CApBD","sourcesContent":["/*!\r\n * arr-filter <https://github.com/jonschlinkert/arr-filter>\r\n *\r\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar makeIterator = require('make-iterator');\r\n\r\nmodule.exports = function filter(arr, fn, thisArg) {\r\n  if (arr == null) {\r\n    return [];\r\n  }\r\n\r\n  if (typeof fn !== 'function') {\r\n    throw new TypeError('expected callback to be a function');\r\n  }\r\n\r\n  var iterator = makeIterator(fn, thisArg);\r\n  var len = arr.length;\r\n  var res = arr.slice();\r\n  var i = -1;\r\n\r\n  while (len--) {\r\n    if (!iterator(arr[len], i++)) {\r\n      res.splice(len, 1);\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"script"}