{"ast":null,"code":"module.exports = debounce;\n\nfunction debounce(fn, delay, atStart, guarantee) {\n  var timeout;\n  var args;\n  var self;\n  return function debounced() {\n    self = this;\n    args = Array.prototype.slice.call(arguments);\n\n    if (timeout && (atStart || guarantee)) {\n      return;\n    } else if (!atStart) {\n      clear();\n      timeout = setTimeout(run, delay);\n      return timeout;\n    }\n\n    timeout = setTimeout(clear, delay);\n    fn.apply(self, args);\n\n    function run() {\n      clear();\n      fn.apply(self, args);\n    }\n\n    function clear() {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n}","map":{"version":3,"sources":["C:/frontend/node_modules/just-debounce/index.js"],"names":["module","exports","debounce","fn","delay","atStart","guarantee","timeout","args","self","debounced","Array","prototype","slice","call","arguments","clear","setTimeout","run","apply","clearTimeout"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;;AAEA,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCC,SAAtC,EAAiD;AAC/C,MAAIC,OAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,IAAJ;AAEA,SAAO,SAASC,SAAT,GAAqB;AAC1BD,IAAAA,IAAI,GAAG,IAAP;AACAD,IAAAA,IAAI,GAAGG,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAP;;AAEA,QAAIR,OAAO,KAAKF,OAAO,IAAIC,SAAhB,CAAX,EAAuC;AACrC;AACD,KAFD,MAEO,IAAI,CAACD,OAAL,EAAc;AACnBW,MAAAA,KAAK;AAELT,MAAAA,OAAO,GAAGU,UAAU,CAACC,GAAD,EAAMd,KAAN,CAApB;AACA,aAAOG,OAAP;AACD;;AAEDA,IAAAA,OAAO,GAAGU,UAAU,CAACD,KAAD,EAAQZ,KAAR,CAApB;AACAD,IAAAA,EAAE,CAACgB,KAAH,CAASV,IAAT,EAAeD,IAAf;;AAEA,aAASU,GAAT,GAAe;AACbF,MAAAA,KAAK;AACLb,MAAAA,EAAE,CAACgB,KAAH,CAASV,IAAT,EAAeD,IAAf;AACD;;AAED,aAASQ,KAAT,GAAiB;AACfI,MAAAA,YAAY,CAACb,OAAD,CAAZ;AACAA,MAAAA,OAAO,GAAG,IAAV;AACD;AACF,GAzBD;AA0BD","sourcesContent":["module.exports = debounce;\r\n\r\nfunction debounce(fn, delay, atStart, guarantee) {\r\n  var timeout;\r\n  var args;\r\n  var self;\r\n\r\n  return function debounced() {\r\n    self = this;\r\n    args = Array.prototype.slice.call(arguments);\r\n\r\n    if (timeout && (atStart || guarantee)) {\r\n      return;\r\n    } else if (!atStart) {\r\n      clear();\r\n\r\n      timeout = setTimeout(run, delay);\r\n      return timeout;\r\n    }\r\n\r\n    timeout = setTimeout(clear, delay);\r\n    fn.apply(self, args);\r\n\r\n    function run() {\r\n      clear();\r\n      fn.apply(self, args);\r\n    }\r\n\r\n    function clear() {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"script"}