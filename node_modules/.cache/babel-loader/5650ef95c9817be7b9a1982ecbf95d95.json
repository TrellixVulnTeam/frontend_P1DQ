{"ast":null,"code":"'use strict';\n\nvar pumpify = require('pumpify');\n\nvar lead = require('lead');\n\nvar mkdirpStream = require('fs-mkdirp-stream');\n\nvar createResolver = require('resolve-options');\n\nvar config = require('./options');\n\nvar prepare = require('./prepare');\n\nvar linkFile = require('./link-file');\n\nvar folderConfig = {\n  outFolder: {\n    type: 'string'\n  }\n};\n\nfunction symlink(outFolder, opt) {\n  if (!outFolder) {\n    throw new Error('Invalid symlink() folder argument.' + ' Please specify a non-empty string or a function.');\n  }\n\n  var optResolver = createResolver(config, opt);\n  var folderResolver = createResolver(folderConfig, {\n    outFolder: outFolder\n  });\n\n  function dirpath(file, callback) {\n    var dirMode = optResolver.resolve('dirMode', file);\n    callback(null, file.dirname, dirMode);\n  }\n\n  var stream = pumpify.obj(prepare(folderResolver, optResolver), mkdirpStream.obj(dirpath), linkFile(optResolver)); // Sink the stream to start flowing\n\n  return lead(stream);\n}\n\nmodule.exports = symlink;","map":{"version":3,"sources":["C:/frontend/node_modules/vinyl-fs/lib/symlink/index.js"],"names":["pumpify","require","lead","mkdirpStream","createResolver","config","prepare","linkFile","folderConfig","outFolder","type","symlink","opt","Error","optResolver","folderResolver","dirpath","file","callback","dirMode","resolve","dirname","stream","obj","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,aAAD,CAAtB;;AAEA,IAAIO,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADM,CAAnB;;AAMA,SAASC,OAAT,CAAiBF,SAAjB,EAA4BG,GAA5B,EAAiC;AAC/B,MAAI,CAACH,SAAL,EAAgB;AACd,UAAM,IAAII,KAAJ,CAAU,uCACd,mDADI,CAAN;AAED;;AAED,MAAIC,WAAW,GAAGV,cAAc,CAACC,MAAD,EAASO,GAAT,CAAhC;AACA,MAAIG,cAAc,GAAGX,cAAc,CAACI,YAAD,EAAe;AAAEC,IAAAA,SAAS,EAAEA;AAAb,GAAf,CAAnC;;AAEA,WAASO,OAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;AAC/B,QAAIC,OAAO,GAAGL,WAAW,CAACM,OAAZ,CAAoB,SAApB,EAA+BH,IAA/B,CAAd;AAEAC,IAAAA,QAAQ,CAAC,IAAD,EAAOD,IAAI,CAACI,OAAZ,EAAqBF,OAArB,CAAR;AACD;;AAED,MAAIG,MAAM,GAAGtB,OAAO,CAACuB,GAAR,CACXjB,OAAO,CAACS,cAAD,EAAiBD,WAAjB,CADI,EAEXX,YAAY,CAACoB,GAAb,CAAiBP,OAAjB,CAFW,EAGXT,QAAQ,CAACO,WAAD,CAHG,CAAb,CAf+B,CAqB/B;;AACA,SAAOZ,IAAI,CAACoB,MAAD,CAAX;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBd,OAAjB","sourcesContent":["'use strict';\r\n\r\nvar pumpify = require('pumpify');\r\nvar lead = require('lead');\r\nvar mkdirpStream = require('fs-mkdirp-stream');\r\nvar createResolver = require('resolve-options');\r\n\r\nvar config = require('./options');\r\nvar prepare = require('./prepare');\r\nvar linkFile = require('./link-file');\r\n\r\nvar folderConfig = {\r\n  outFolder: {\r\n    type: 'string',\r\n  },\r\n};\r\n\r\nfunction symlink(outFolder, opt) {\r\n  if (!outFolder) {\r\n    throw new Error('Invalid symlink() folder argument.' +\r\n      ' Please specify a non-empty string or a function.');\r\n  }\r\n\r\n  var optResolver = createResolver(config, opt);\r\n  var folderResolver = createResolver(folderConfig, { outFolder: outFolder });\r\n\r\n  function dirpath(file, callback) {\r\n    var dirMode = optResolver.resolve('dirMode', file);\r\n\r\n    callback(null, file.dirname, dirMode);\r\n  }\r\n\r\n  var stream = pumpify.obj(\r\n    prepare(folderResolver, optResolver),\r\n    mkdirpStream.obj(dirpath),\r\n    linkFile(optResolver)\r\n  );\r\n\r\n  // Sink the stream to start flowing\r\n  return lead(stream);\r\n}\r\n\r\nmodule.exports = symlink;\r\n"]},"metadata":{},"sourceType":"script"}