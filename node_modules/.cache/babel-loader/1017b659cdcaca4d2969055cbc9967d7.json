{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar util = require('util');\n\nvar isBuffer = require('buffer').Buffer.isBuffer;\n\nvar clone = require('clone');\n\nvar cloneable = require('cloneable-readable');\n\nvar replaceExt = require('replace-ext');\n\nvar cloneStats = require('clone-stats');\n\nvar cloneBuffer = require('clone-buffer');\n\nvar removeTrailingSep = require('remove-trailing-separator');\n\nvar isStream = require('./lib/is-stream');\n\nvar normalize = require('./lib/normalize');\n\nvar inspectStream = require('./lib/inspect-stream');\n\nvar builtInFields = ['_contents', '_symlink', 'contents', 'stat', 'history', 'path', '_base', 'base', '_cwd', 'cwd'];\n\nfunction File(file) {\n  var self = this;\n\n  if (!file) {\n    file = {};\n  } // Stat = files stats object\n\n\n  this.stat = file.stat || null; // Contents = stream, buffer, or null if not read\n\n  this.contents = file.contents || null; // Replay path history to ensure proper normalization and trailing sep\n\n  var history = Array.prototype.slice.call(file.history || []);\n\n  if (file.path) {\n    history.push(file.path);\n  }\n\n  this.history = [];\n  history.forEach(function (path) {\n    self.path = path;\n  });\n  this.cwd = file.cwd || process.cwd();\n  this.base = file.base;\n  this._isVinyl = true;\n  this._symlink = null; // Set custom properties\n\n  Object.keys(file).forEach(function (key) {\n    if (self.constructor.isCustomProp(key)) {\n      self[key] = file[key];\n    }\n  });\n}\n\nFile.prototype.isBuffer = function () {\n  return isBuffer(this.contents);\n};\n\nFile.prototype.isStream = function () {\n  return isStream(this.contents);\n};\n\nFile.prototype.isNull = function () {\n  return this.contents === null;\n};\n\nFile.prototype.isDirectory = function () {\n  if (!this.isNull()) {\n    return false;\n  }\n\n  if (this.stat && typeof this.stat.isDirectory === 'function') {\n    return this.stat.isDirectory();\n  }\n\n  return false;\n};\n\nFile.prototype.isSymbolic = function () {\n  if (!this.isNull()) {\n    return false;\n  }\n\n  if (this.stat && typeof this.stat.isSymbolicLink === 'function') {\n    return this.stat.isSymbolicLink();\n  }\n\n  return false;\n};\n\nFile.prototype.clone = function (opt) {\n  var self = this;\n\n  if (typeof opt === 'boolean') {\n    opt = {\n      deep: opt,\n      contents: true\n    };\n  } else if (!opt) {\n    opt = {\n      deep: true,\n      contents: true\n    };\n  } else {\n    opt.deep = opt.deep === true;\n    opt.contents = opt.contents !== false;\n  } // Clone our file contents\n\n\n  var contents;\n\n  if (this.isStream()) {\n    contents = this.contents.clone();\n  } else if (this.isBuffer()) {\n    contents = opt.contents ? cloneBuffer(this.contents) : this.contents;\n  }\n\n  var file = new this.constructor({\n    cwd: this.cwd,\n    base: this.base,\n    stat: this.stat ? cloneStats(this.stat) : null,\n    history: this.history.slice(),\n    contents: contents\n  });\n\n  if (this.isSymbolic()) {\n    file.symlink = this.symlink;\n  } // Clone our custom properties\n\n\n  Object.keys(this).forEach(function (key) {\n    if (self.constructor.isCustomProp(key)) {\n      file[key] = opt.deep ? clone(self[key], true) : self[key];\n    }\n  });\n  return file;\n};\n\nFile.prototype.inspect = function () {\n  var inspect = []; // Use relative path if possible\n\n  var filePath = this.path ? this.relative : null;\n\n  if (filePath) {\n    inspect.push('\"' + filePath + '\"');\n  }\n\n  if (this.isBuffer()) {\n    inspect.push(this.contents.inspect());\n  }\n\n  if (this.isStream()) {\n    inspect.push(inspectStream(this.contents));\n  }\n\n  return '<File ' + inspect.join(' ') + '>';\n}; // Newer Node.js versions use this symbol for custom inspection.\n\n\nif (util.inspect.custom) {\n  File.prototype[util.inspect.custom] = File.prototype.inspect;\n}\n\nFile.isCustomProp = function (key) {\n  return builtInFields.indexOf(key) === -1;\n};\n\nFile.isVinyl = function (file) {\n  return file && file._isVinyl === true || false;\n}; // Virtual attributes\n// Or stuff with extra logic\n\n\nObject.defineProperty(File.prototype, 'contents', {\n  get: function () {\n    return this._contents;\n  },\n  set: function (val) {\n    if (!isBuffer(val) && !isStream(val) && val !== null) {\n      throw new Error('File.contents can only be a Buffer, a Stream, or null.');\n    } // Ask cloneable if the stream is a already a cloneable\n    // this avoid piping into many streams\n    // reducing the overhead of cloning\n\n\n    if (isStream(val) && !cloneable.isCloneable(val)) {\n      val = cloneable(val);\n    }\n\n    this._contents = val;\n  }\n});\nObject.defineProperty(File.prototype, 'cwd', {\n  get: function () {\n    return this._cwd;\n  },\n  set: function (cwd) {\n    if (!cwd || typeof cwd !== 'string') {\n      throw new Error('cwd must be a non-empty string.');\n    }\n\n    this._cwd = removeTrailingSep(normalize(cwd));\n  }\n});\nObject.defineProperty(File.prototype, 'base', {\n  get: function () {\n    return this._base || this._cwd;\n  },\n  set: function (base) {\n    if (base == null) {\n      delete this._base;\n      return;\n    }\n\n    if (typeof base !== 'string' || !base) {\n      throw new Error('base must be a non-empty string, or null/undefined.');\n    }\n\n    base = removeTrailingSep(normalize(base));\n\n    if (base !== this._cwd) {\n      this._base = base;\n    } else {\n      delete this._base;\n    }\n  }\n}); // TODO: Should this be moved to vinyl-fs?\n\nObject.defineProperty(File.prototype, 'relative', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get relative.');\n    }\n\n    return path.relative(this.base, this.path);\n  },\n  set: function () {\n    throw new Error('File.relative is generated from the base and path attributes. Do not modify it.');\n  }\n});\nObject.defineProperty(File.prototype, 'dirname', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get dirname.');\n    }\n\n    return path.dirname(this.path);\n  },\n  set: function (dirname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set dirname.');\n    }\n\n    this.path = path.join(dirname, this.basename);\n  }\n});\nObject.defineProperty(File.prototype, 'basename', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get basename.');\n    }\n\n    return path.basename(this.path);\n  },\n  set: function (basename) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set basename.');\n    }\n\n    this.path = path.join(this.dirname, basename);\n  }\n}); // Property for getting/setting stem of the filename.\n\nObject.defineProperty(File.prototype, 'stem', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get stem.');\n    }\n\n    return path.basename(this.path, this.extname);\n  },\n  set: function (stem) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set stem.');\n    }\n\n    this.path = path.join(this.dirname, stem + this.extname);\n  }\n});\nObject.defineProperty(File.prototype, 'extname', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get extname.');\n    }\n\n    return path.extname(this.path);\n  },\n  set: function (extname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set extname.');\n    }\n\n    this.path = replaceExt(this.path, extname);\n  }\n});\nObject.defineProperty(File.prototype, 'path', {\n  get: function () {\n    return this.history[this.history.length - 1];\n  },\n  set: function (path) {\n    if (typeof path !== 'string') {\n      throw new Error('path should be a string.');\n    }\n\n    path = removeTrailingSep(normalize(path)); // Record history only when path changed\n\n    if (path && path !== this.path) {\n      this.history.push(path);\n    }\n  }\n});\nObject.defineProperty(File.prototype, 'symlink', {\n  get: function () {\n    return this._symlink;\n  },\n  set: function (symlink) {\n    // TODO: should this set the mode to symbolic if set?\n    if (typeof symlink !== 'string') {\n      throw new Error('symlink should be a string');\n    }\n\n    this._symlink = removeTrailingSep(normalize(symlink));\n  }\n});\nmodule.exports = File;","map":{"version":3,"sources":["C:/frontend/node_modules/vinyl/index.js"],"names":["path","require","util","isBuffer","Buffer","clone","cloneable","replaceExt","cloneStats","cloneBuffer","removeTrailingSep","isStream","normalize","inspectStream","builtInFields","File","file","self","stat","contents","history","Array","prototype","slice","call","push","forEach","cwd","process","base","_isVinyl","_symlink","Object","keys","key","constructor","isCustomProp","isNull","isDirectory","isSymbolic","isSymbolicLink","opt","deep","symlink","inspect","filePath","relative","join","custom","indexOf","isVinyl","defineProperty","get","_contents","set","val","Error","isCloneable","_cwd","_base","dirname","basename","extname","stem","length","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar path = require('path');\r\nvar util = require('util');\r\nvar isBuffer = require('buffer').Buffer.isBuffer;\r\n\r\nvar clone = require('clone');\r\nvar cloneable = require('cloneable-readable');\r\nvar replaceExt = require('replace-ext');\r\nvar cloneStats = require('clone-stats');\r\nvar cloneBuffer = require('clone-buffer');\r\nvar removeTrailingSep = require('remove-trailing-separator');\r\n\r\nvar isStream = require('./lib/is-stream');\r\nvar normalize = require('./lib/normalize');\r\nvar inspectStream = require('./lib/inspect-stream');\r\n\r\nvar builtInFields = [\r\n  '_contents', '_symlink', 'contents', 'stat', 'history', 'path',\r\n  '_base', 'base', '_cwd', 'cwd',\r\n];\r\n\r\nfunction File(file) {\r\n  var self = this;\r\n\r\n  if (!file) {\r\n    file = {};\r\n  }\r\n\r\n  // Stat = files stats object\r\n  this.stat = file.stat || null;\r\n\r\n  // Contents = stream, buffer, or null if not read\r\n  this.contents = file.contents || null;\r\n\r\n  // Replay path history to ensure proper normalization and trailing sep\r\n  var history = Array.prototype.slice.call(file.history || []);\r\n  if (file.path) {\r\n    history.push(file.path);\r\n  }\r\n  this.history = [];\r\n  history.forEach(function(path) {\r\n    self.path = path;\r\n  });\r\n\r\n  this.cwd = file.cwd || process.cwd();\r\n  this.base = file.base;\r\n\r\n  this._isVinyl = true;\r\n\r\n  this._symlink = null;\r\n\r\n  // Set custom properties\r\n  Object.keys(file).forEach(function(key) {\r\n    if (self.constructor.isCustomProp(key)) {\r\n      self[key] = file[key];\r\n    }\r\n  });\r\n}\r\n\r\nFile.prototype.isBuffer = function() {\r\n  return isBuffer(this.contents);\r\n};\r\n\r\nFile.prototype.isStream = function() {\r\n  return isStream(this.contents);\r\n};\r\n\r\nFile.prototype.isNull = function() {\r\n  return (this.contents === null);\r\n};\r\n\r\nFile.prototype.isDirectory = function() {\r\n  if (!this.isNull()) {\r\n    return false;\r\n  }\r\n\r\n  if (this.stat && typeof this.stat.isDirectory === 'function') {\r\n    return this.stat.isDirectory();\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nFile.prototype.isSymbolic = function() {\r\n  if (!this.isNull()) {\r\n    return false;\r\n  }\r\n\r\n  if (this.stat && typeof this.stat.isSymbolicLink === 'function') {\r\n    return this.stat.isSymbolicLink();\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nFile.prototype.clone = function(opt) {\r\n  var self = this;\r\n\r\n  if (typeof opt === 'boolean') {\r\n    opt = {\r\n      deep: opt,\r\n      contents: true,\r\n    };\r\n  } else if (!opt) {\r\n    opt = {\r\n      deep: true,\r\n      contents: true,\r\n    };\r\n  } else {\r\n    opt.deep = opt.deep === true;\r\n    opt.contents = opt.contents !== false;\r\n  }\r\n\r\n  // Clone our file contents\r\n  var contents;\r\n  if (this.isStream()) {\r\n    contents = this.contents.clone();\r\n  } else if (this.isBuffer()) {\r\n    contents = opt.contents ? cloneBuffer(this.contents) : this.contents;\r\n  }\r\n\r\n  var file = new this.constructor({\r\n    cwd: this.cwd,\r\n    base: this.base,\r\n    stat: (this.stat ? cloneStats(this.stat) : null),\r\n    history: this.history.slice(),\r\n    contents: contents,\r\n  });\r\n\r\n  if (this.isSymbolic()) {\r\n    file.symlink = this.symlink;\r\n  }\r\n\r\n  // Clone our custom properties\r\n  Object.keys(this).forEach(function(key) {\r\n    if (self.constructor.isCustomProp(key)) {\r\n      file[key] = opt.deep ? clone(self[key], true) : self[key];\r\n    }\r\n  });\r\n  return file;\r\n};\r\n\r\nFile.prototype.inspect = function() {\r\n  var inspect = [];\r\n\r\n  // Use relative path if possible\r\n  var filePath = this.path ? this.relative : null;\r\n\r\n  if (filePath) {\r\n    inspect.push('\"' + filePath + '\"');\r\n  }\r\n\r\n  if (this.isBuffer()) {\r\n    inspect.push(this.contents.inspect());\r\n  }\r\n\r\n  if (this.isStream()) {\r\n    inspect.push(inspectStream(this.contents));\r\n  }\r\n\r\n  return '<File ' + inspect.join(' ') + '>';\r\n};\r\n\r\n// Newer Node.js versions use this symbol for custom inspection.\r\nif (util.inspect.custom) {\r\n  File.prototype[util.inspect.custom] = File.prototype.inspect;\r\n}\r\n\r\nFile.isCustomProp = function(key) {\r\n  return builtInFields.indexOf(key) === -1;\r\n};\r\n\r\nFile.isVinyl = function(file) {\r\n  return (file && file._isVinyl === true) || false;\r\n};\r\n\r\n// Virtual attributes\r\n// Or stuff with extra logic\r\nObject.defineProperty(File.prototype, 'contents', {\r\n  get: function() {\r\n    return this._contents;\r\n  },\r\n  set: function(val) {\r\n    if (!isBuffer(val) && !isStream(val) && (val !== null)) {\r\n      throw new Error('File.contents can only be a Buffer, a Stream, or null.');\r\n    }\r\n\r\n    // Ask cloneable if the stream is a already a cloneable\r\n    // this avoid piping into many streams\r\n    // reducing the overhead of cloning\r\n    if (isStream(val) && !cloneable.isCloneable(val)) {\r\n      val = cloneable(val);\r\n    }\r\n\r\n    this._contents = val;\r\n  },\r\n});\r\n\r\nObject.defineProperty(File.prototype, 'cwd', {\r\n  get: function() {\r\n    return this._cwd;\r\n  },\r\n  set: function(cwd) {\r\n    if (!cwd || typeof cwd !== 'string') {\r\n      throw new Error('cwd must be a non-empty string.');\r\n    }\r\n    this._cwd = removeTrailingSep(normalize(cwd));\r\n  },\r\n});\r\n\r\nObject.defineProperty(File.prototype, 'base', {\r\n  get: function() {\r\n    return this._base || this._cwd;\r\n  },\r\n  set: function(base) {\r\n    if (base == null) {\r\n      delete this._base;\r\n      return;\r\n    }\r\n    if (typeof base !== 'string' || !base) {\r\n      throw new Error('base must be a non-empty string, or null/undefined.');\r\n    }\r\n    base = removeTrailingSep(normalize(base));\r\n    if (base !== this._cwd) {\r\n      this._base = base;\r\n    } else {\r\n      delete this._base;\r\n    }\r\n  },\r\n});\r\n\r\n// TODO: Should this be moved to vinyl-fs?\r\nObject.defineProperty(File.prototype, 'relative', {\r\n  get: function() {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not get relative.');\r\n    }\r\n    return path.relative(this.base, this.path);\r\n  },\r\n  set: function() {\r\n    throw new Error('File.relative is generated from the base and path attributes. Do not modify it.');\r\n  },\r\n});\r\n\r\nObject.defineProperty(File.prototype, 'dirname', {\r\n  get: function() {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not get dirname.');\r\n    }\r\n    return path.dirname(this.path);\r\n  },\r\n  set: function(dirname) {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not set dirname.');\r\n    }\r\n    this.path = path.join(dirname, this.basename);\r\n  },\r\n});\r\n\r\nObject.defineProperty(File.prototype, 'basename', {\r\n  get: function() {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not get basename.');\r\n    }\r\n    return path.basename(this.path);\r\n  },\r\n  set: function(basename) {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not set basename.');\r\n    }\r\n    this.path = path.join(this.dirname, basename);\r\n  },\r\n});\r\n\r\n// Property for getting/setting stem of the filename.\r\nObject.defineProperty(File.prototype, 'stem', {\r\n  get: function() {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not get stem.');\r\n    }\r\n    return path.basename(this.path, this.extname);\r\n  },\r\n  set: function(stem) {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not set stem.');\r\n    }\r\n    this.path = path.join(this.dirname, stem + this.extname);\r\n  },\r\n});\r\n\r\nObject.defineProperty(File.prototype, 'extname', {\r\n  get: function() {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not get extname.');\r\n    }\r\n    return path.extname(this.path);\r\n  },\r\n  set: function(extname) {\r\n    if (!this.path) {\r\n      throw new Error('No path specified! Can not set extname.');\r\n    }\r\n    this.path = replaceExt(this.path, extname);\r\n  },\r\n});\r\n\r\nObject.defineProperty(File.prototype, 'path', {\r\n  get: function() {\r\n    return this.history[this.history.length - 1];\r\n  },\r\n  set: function(path) {\r\n    if (typeof path !== 'string') {\r\n      throw new Error('path should be a string.');\r\n    }\r\n    path = removeTrailingSep(normalize(path));\r\n\r\n    // Record history only when path changed\r\n    if (path && path !== this.path) {\r\n      this.history.push(path);\r\n    }\r\n  },\r\n});\r\n\r\nObject.defineProperty(File.prototype, 'symlink', {\r\n  get: function() {\r\n    return this._symlink;\r\n  },\r\n  set: function(symlink) {\r\n    // TODO: should this set the mode to symbolic if set?\r\n    if (typeof symlink !== 'string') {\r\n      throw new Error('symlink should be a string');\r\n    }\r\n\r\n    this._symlink = removeTrailingSep(normalize(symlink));\r\n  },\r\n});\r\n\r\nmodule.exports = File;\r\n"]},"metadata":{},"sourceType":"script"}