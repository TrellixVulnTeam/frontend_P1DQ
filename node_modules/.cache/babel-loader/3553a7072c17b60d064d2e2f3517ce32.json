{"ast":null,"code":"'use strict';\n\nvar fo = require('../../file-operations');\n\nfunction writeBuffer(file, optResolver, onWritten) {\n  var flags = fo.getFlags({\n    overwrite: optResolver.resolve('overwrite', file),\n    append: optResolver.resolve('append', file)\n  });\n  var opt = {\n    mode: file.stat.mode,\n    flags: flags\n  };\n  fo.writeFile(file.path, file.contents, opt, onWriteFile);\n\n  function onWriteFile(writeErr, fd) {\n    if (writeErr) {\n      return fo.closeFd(writeErr, fd, onWritten);\n    }\n\n    fo.updateMetadata(fd, file, onUpdate);\n\n    function onUpdate(updateErr) {\n      fo.closeFd(updateErr, fd, onWritten);\n    }\n  }\n}\n\nmodule.exports = writeBuffer;","map":{"version":3,"sources":["C:/frontend/node_modules/vinyl-fs/lib/dest/write-contents/write-buffer.js"],"names":["fo","require","writeBuffer","file","optResolver","onWritten","flags","getFlags","overwrite","resolve","append","opt","mode","stat","writeFile","path","contents","onWriteFile","writeErr","fd","closeFd","updateMetadata","onUpdate","updateErr","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,uBAAD,CAAhB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,WAA3B,EAAwCC,SAAxC,EAAmD;AACjD,MAAIC,KAAK,GAAGN,EAAE,CAACO,QAAH,CAAY;AACtBC,IAAAA,SAAS,EAAEJ,WAAW,CAACK,OAAZ,CAAoB,WAApB,EAAiCN,IAAjC,CADW;AAEtBO,IAAAA,MAAM,EAAEN,WAAW,CAACK,OAAZ,CAAoB,QAApB,EAA8BN,IAA9B;AAFc,GAAZ,CAAZ;AAIA,MAAIQ,GAAG,GAAG;AACRC,IAAAA,IAAI,EAAET,IAAI,CAACU,IAAL,CAAUD,IADR;AAERN,IAAAA,KAAK,EAAEA;AAFC,GAAV;AAKAN,EAAAA,EAAE,CAACc,SAAH,CAAaX,IAAI,CAACY,IAAlB,EAAwBZ,IAAI,CAACa,QAA7B,EAAuCL,GAAvC,EAA4CM,WAA5C;;AAEA,WAASA,WAAT,CAAqBC,QAArB,EAA+BC,EAA/B,EAAmC;AACjC,QAAID,QAAJ,EAAc;AACZ,aAAOlB,EAAE,CAACoB,OAAH,CAAWF,QAAX,EAAqBC,EAArB,EAAyBd,SAAzB,CAAP;AACD;;AAEDL,IAAAA,EAAE,CAACqB,cAAH,CAAkBF,EAAlB,EAAsBhB,IAAtB,EAA4BmB,QAA5B;;AAEA,aAASA,QAAT,CAAkBC,SAAlB,EAA6B;AAC3BvB,MAAAA,EAAE,CAACoB,OAAH,CAAWG,SAAX,EAAsBJ,EAAtB,EAA0Bd,SAA1B;AACD;AACF;AAEF;;AAEDmB,MAAM,CAACC,OAAP,GAAiBvB,WAAjB","sourcesContent":["'use strict';\r\n\r\nvar fo = require('../../file-operations');\r\n\r\nfunction writeBuffer(file, optResolver, onWritten) {\r\n  var flags = fo.getFlags({\r\n    overwrite: optResolver.resolve('overwrite', file),\r\n    append: optResolver.resolve('append', file),\r\n  });\r\n  var opt = {\r\n    mode: file.stat.mode,\r\n    flags: flags,\r\n  };\r\n\r\n  fo.writeFile(file.path, file.contents, opt, onWriteFile);\r\n\r\n  function onWriteFile(writeErr, fd) {\r\n    if (writeErr) {\r\n      return fo.closeFd(writeErr, fd, onWritten);\r\n    }\r\n\r\n    fo.updateMetadata(fd, file, onUpdate);\r\n\r\n    function onUpdate(updateErr) {\r\n      fo.closeFd(updateErr, fd, onWritten);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = writeBuffer;\r\n"]},"metadata":{},"sourceType":"script"}