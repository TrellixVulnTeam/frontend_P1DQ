{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend\\\\src\\\\views\\\\examples\\\\BoardInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Button, Input } from \"reactstrap\";\nimport moment from 'moment'; // 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\n\nimport 'moment/locale/ko';\nimport TestPage from \"./TestPage\";\nimport { useParams } from \"react-router-dom\";\nimport { identifier } from \"@babel/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardInput() {\n  _s();\n\n  const nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\n  const {\n    mode\n  } = useParams();\n  const [Board, setBoard] = useState({\n    title: \" \",\n    content: \" \",\n    board_date: nowTime,\n    id: \"test\",\n    view: \"0\"\n  });\n  const [UpBoard, setUpBoard] = useState({\n    idx: \"\",\n    title: \" \",\n    content: \" \",\n    board_date: nowTime,\n    id: \"test\",\n    view: \"0\"\n  });\n  let pageHeader = /*#__PURE__*/React.createRef();\n  React.useEffect(() => {\n    axios.get('http://localhost:8080/api/board/' + num).then(function (response) {\n      setBoard(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const f3 = async () => {\n    if (mode === 'new') {\n      axios.post('http://localhost:8080/api/board', Board).then(function (response) {\n        console.log(response);\n        window.location.href = 'http://localhost:3000/boardread/' + response.data.idx;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      axios.put('http://localhost:8080/api/board/' + UpBoard.idx, UpBoard).then(function (response) {\n        console.log(response);\n        window.location.href = 'http://localhost:3000/boardread/' + UpBoard.idx;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }; //alert(Board.title);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header-image\",\n      style: {\n        backgroundImage: \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\"\n      },\n      ref: pageHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-center\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uC81C\\uBAA9...\",\n            type: \"text\",\n            name: \"title\",\n            onChange: ({\n              target: {\n                value\n              }\n            }) => setBoard({\n              title: value,\n              content: Board.content,\n              board_date: Board.board_date,\n              id: Board.id,\n              view: Board.view\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uB0B4\\uC6A9...\",\n            type: \"textarea\",\n            name: \"content\",\n            onChange: ({\n              target: {\n                value\n              }\n            }) => setBoard({\n              title: Board.title,\n              content: value,\n              board_date: Board.board_date,\n              id: Board.id,\n              view: Board.view\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          className: \"btn-view\",\n          color: \"black\",\n          href: \"board-page\",\n          size: \"5px\",\n          children: \"\\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          className: \"btn-board\",\n          color: \"black\" // href=\"\"\n          ,\n          onClick: f3,\n          size: \"5px\",\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 1\n  }, this);\n}\n\n_s(BoardInput, \"Bm0gRnmHwdQU+DMTugczWk9pxXs=\", false, function () {\n  return [useParams];\n});\n\n_c = BoardInput;\nexport default BoardInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardInput\");","map":{"version":3,"sources":["C:/frontend/src/views/examples/BoardInput.js"],"names":["React","useState","axios","Container","Button","Input","moment","TestPage","useParams","identifier","BoardInput","nowTime","format","mode","Board","setBoard","title","content","board_date","id","view","UpBoard","setUpBoard","idx","pageHeader","createRef","useEffect","get","num","then","response","data","catch","error","console","log","f3","post","window","location","href","put","backgroundImage","require","default","target","value"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\"\r\nimport axios from \"axios\";\r\nimport {Container, Button, Input } from \"reactstrap\";\r\nimport moment from 'moment';\r\n// 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\r\nimport 'moment/locale/ko';\r\nimport TestPage from \"./TestPage\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { identifier } from \"@babel/types\";\r\nfunction BoardInput() {\r\n   \r\nconst nowTime = moment().format('YYYY-MM-DD HH:mm:ss'); \r\n\r\nconst {mode} = useParams(); \r\n    const [Board, setBoard] = useState({\r\n         title: \" \",\r\n         content: \" \",\r\n         board_date: nowTime,\r\n         id: \"test\",        \r\n         view: \"0\"\r\n}\r\n      );\r\n      const [UpBoard, setUpBoard] = useState({\r\n        idx:\"\",\r\n        title: \" \",\r\n        content: \" \",\r\n        board_date: nowTime,\r\n        id: \"test\",        \r\n        view: \"0\"\r\n}\r\n     );\r\n     let pageHeader = React.createRef();\r\n\r\n     React.useEffect(() => {\r\n      axios.get('http://localhost:8080/api/board/'+num)\r\n      .then(function (response) {\r\n          setBoard(response.data);\r\n    \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    }, []);\r\n     const f3 = async () => {\r\n       if(mode==='new'){\r\n        axios.post('http://localhost:8080/api/board', Board)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        window.location.href ='http://localhost:3000/boardread/'+response.data.idx\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }else {\r\n      axios.put('http://localhost:8080/api/board/'+UpBoard.idx, UpBoard)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        window.location.href ='http://localhost:3000/boardread/'+UpBoard.idx\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n      }\r\n\r\n      //alert(Board.title);\r\n    return(\r\n<div className=\"page-header\">\r\n        <div\r\n          className=\"page-header-image\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\",\r\n          }}\r\n          ref={pageHeader}\r\n        ></div>\r\n        <div className=\"content-center\">\r\n          <Container>\r\n            <h1 className=\"title\">자유게시판</h1><br/>\r\n            <h2><Input\r\n            placeholder=\"제목...\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n\r\n            onChange={({ target: { value } }) => \r\n             setBoard({\r\n                 title: value,\r\n                 content: Board.content,\r\n                 board_date: Board.board_date,\r\n                id: Board.id,        \r\n                view: Board.view\r\n        })\r\n \r\n    }\r\n\r\n            ></Input></h2>\r\n            \r\n            <h2><Input\r\n            placeholder=\"내용...\"\r\n            type=\"textarea\"\r\n            name=\"content\"\r\n            onChange={({ target: { value } }) => setBoard({\r\n                title: Board.title,\r\n                content: value,\r\n                board_date: Board.board_date,\r\n                id: Board.id,        \r\n                view: Board.view\r\n       })}\r\n            ></Input></h2>\r\n            <br/>\r\n            <Button\r\n            block\r\n            className=\"btn-view\"\r\n            color=\"black\"\r\n            href=\"board-page\"\r\n            size=\"5px\"\r\n            >\r\n                목록\r\n                </Button>\r\n            <Button\r\n            block\r\n            className=\"btn-board\"\r\n            color=\"black\"\r\n            // href=\"\"\r\n            onClick={f3}\r\n            size=\"5px\"\r\n            >\r\n                등록\r\n                </Button>\r\n                \r\n          </Container>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BoardInput;"]},"metadata":{},"sourceType":"module"}