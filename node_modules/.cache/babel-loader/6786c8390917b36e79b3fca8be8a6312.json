{"ast":null,"code":"/*!\r\n * array-each <https://github.com/jonschlinkert/array-each>\r\n *\r\n * Copyright (c) 2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n/**\r\n * Loop over each item in an array and call the given function on every element.\r\n *\r\n * ```js\r\n * each(['a', 'b', 'c'], function(ele) {\r\n *   return ele + ele;\r\n * });\r\n * //=> ['aa', 'bb', 'cc']\r\n *\r\n * each(['a', 'b', 'c'], function(ele, i) {\r\n *   return i + ele;\r\n * });\r\n * //=> ['0a', '1b', '2c']\r\n * ```\r\n *\r\n * @name each\r\n * @alias forEach\r\n * @param {Array} `array`\r\n * @param {Function} `fn`\r\n * @param {Object} `thisArg` (optional) pass a `thisArg` to be used as the context in which to call the function.\r\n * @return {undefined}\r\n * @api public\r\n */\n\nmodule.exports = function each(arr, cb, thisArg) {\n  if (arr == null) return;\n  var len = arr.length;\n  var idx = -1;\n\n  while (++idx < len) {\n    var ele = arr[idx];\n\n    if (cb.call(thisArg, ele, idx, arr) === false) {\n      break;\n    }\n  }\n};","map":{"version":3,"sources":["C:/frontend/node_modules/array-each/index.js"],"names":["module","exports","each","arr","cb","thisArg","len","length","idx","ele","call"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,GAAd,EAAmBC,EAAnB,EAAuBC,OAAvB,EAAgC;AAC/C,MAAIF,GAAG,IAAI,IAAX,EAAiB;AAEjB,MAAIG,GAAG,GAAGH,GAAG,CAACI,MAAd;AACA,MAAIC,GAAG,GAAG,CAAC,CAAX;;AAEA,SAAO,EAAEA,GAAF,GAAQF,GAAf,EAAoB;AAClB,QAAIG,GAAG,GAAGN,GAAG,CAACK,GAAD,CAAb;;AACA,QAAIJ,EAAE,CAACM,IAAH,CAAQL,OAAR,EAAiBI,GAAjB,EAAsBD,GAAtB,EAA2BL,GAA3B,MAAoC,KAAxC,EAA+C;AAC7C;AACD;AACF;AACF,CAZD","sourcesContent":["/*!\r\n * array-each <https://github.com/jonschlinkert/array-each>\r\n *\r\n * Copyright (c) 2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Loop over each item in an array and call the given function on every element.\r\n *\r\n * ```js\r\n * each(['a', 'b', 'c'], function(ele) {\r\n *   return ele + ele;\r\n * });\r\n * //=> ['aa', 'bb', 'cc']\r\n *\r\n * each(['a', 'b', 'c'], function(ele, i) {\r\n *   return i + ele;\r\n * });\r\n * //=> ['0a', '1b', '2c']\r\n * ```\r\n *\r\n * @name each\r\n * @alias forEach\r\n * @param {Array} `array`\r\n * @param {Function} `fn`\r\n * @param {Object} `thisArg` (optional) pass a `thisArg` to be used as the context in which to call the function.\r\n * @return {undefined}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function each(arr, cb, thisArg) {\r\n  if (arr == null) return;\r\n\r\n  var len = arr.length;\r\n  var idx = -1;\r\n\r\n  while (++idx < len) {\r\n    var ele = arr[idx];\r\n    if (cb.call(thisArg, ele, idx, arr) === false) {\r\n      break;\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}