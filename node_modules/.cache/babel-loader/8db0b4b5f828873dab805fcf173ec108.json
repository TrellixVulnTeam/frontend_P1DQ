{"ast":null,"code":"/*!\r\n * make-iterator <https://github.com/jonschlinkert/make-iterator>\r\n *\r\n * Copyright (c) 2014-2018, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function makeIterator(target, thisArg) {\n  switch (typeOf(target)) {\n    case 'undefined':\n    case 'null':\n      return noop;\n\n    case 'function':\n      // function is the first to improve perf (most common case)\n      // also avoid using `Function#call` if not needed, which boosts\n      // perf a lot in some cases\n      return typeof thisArg !== 'undefined' ? function (val, i, arr) {\n        return target.call(thisArg, val, i, arr);\n      } : target;\n\n    case 'object':\n      return function (val) {\n        return deepMatches(val, target);\n      };\n\n    case 'regexp':\n      return function (str) {\n        return target.test(str);\n      };\n\n    case 'string':\n    case 'number':\n    default:\n      {\n        return prop(target);\n      }\n  }\n};\n\nfunction containsMatch(array, value) {\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    if (deepMatches(array[i], value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction matchArray(arr, value) {\n  var len = value.length;\n  var i = -1;\n\n  while (++i < len) {\n    if (!containsMatch(arr, value[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction matchObject(obj, value) {\n  for (var key in value) {\n    if (value.hasOwnProperty(key)) {\n      if (deepMatches(obj[key], value[key]) === false) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\r\n * Recursively compare objects\r\n */\n\n\nfunction deepMatches(val, value) {\n  if (typeOf(val) === 'object') {\n    if (Array.isArray(val) && Array.isArray(value)) {\n      return matchArray(val, value);\n    } else {\n      return matchObject(val, value);\n    }\n  } else {\n    return val === value;\n  }\n}\n\nfunction prop(name) {\n  return function (obj) {\n    return obj[name];\n  };\n}\n\nfunction noop(val) {\n  return val;\n}","map":{"version":3,"sources":["C:/frontend/node_modules/make-iterator/index.js"],"names":["typeOf","require","module","exports","makeIterator","target","thisArg","noop","val","i","arr","call","deepMatches","str","test","prop","containsMatch","array","value","len","length","matchArray","matchObject","obj","key","hasOwnProperty","Array","isArray","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,OAA9B,EAAuC;AACtD,UAAQN,MAAM,CAACK,MAAD,CAAd;AACE,SAAK,WAAL;AACA,SAAK,MAAL;AACE,aAAOE,IAAP;;AACF,SAAK,UAAL;AACE;AACA;AACA;AACA,aAAQ,OAAOD,OAAP,KAAmB,WAApB,GAAmC,UAASE,GAAT,EAAcC,CAAd,EAAiBC,GAAjB,EAAsB;AAC9D,eAAOL,MAAM,CAACM,IAAP,CAAYL,OAAZ,EAAqBE,GAArB,EAA0BC,CAA1B,EAA6BC,GAA7B,CAAP;AACD,OAFM,GAEHL,MAFJ;;AAGF,SAAK,QAAL;AACE,aAAO,UAASG,GAAT,EAAc;AACnB,eAAOI,WAAW,CAACJ,GAAD,EAAMH,MAAN,CAAlB;AACD,OAFD;;AAGF,SAAK,QAAL;AACE,aAAO,UAASQ,GAAT,EAAc;AACnB,eAAOR,MAAM,CAACS,IAAP,CAAYD,GAAZ,CAAP;AACD,OAFD;;AAGF,SAAK,QAAL;AACA,SAAK,QAAL;AACA;AAAS;AACP,eAAOE,IAAI,CAACV,MAAD,CAAX;AACD;AAvBH;AAyBD,CA1BD;;AA4BA,SAASW,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIC,GAAG,GAAGF,KAAK,CAACG,MAAhB;AACA,MAAIX,CAAC,GAAG,CAAC,CAAT;;AAEA,SAAO,EAAEA,CAAF,GAAMU,GAAb,EAAkB;AAChB,QAAIP,WAAW,CAACK,KAAK,CAACR,CAAD,CAAN,EAAWS,KAAX,CAAf,EAAkC;AAChC,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,SAASG,UAAT,CAAoBX,GAApB,EAAyBQ,KAAzB,EAAgC;AAC9B,MAAIC,GAAG,GAAGD,KAAK,CAACE,MAAhB;AACA,MAAIX,CAAC,GAAG,CAAC,CAAT;;AAEA,SAAO,EAAEA,CAAF,GAAMU,GAAb,EAAkB;AAChB,QAAI,CAACH,aAAa,CAACN,GAAD,EAAMQ,KAAK,CAACT,CAAD,CAAX,CAAlB,EAAmC;AACjC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,SAASa,WAAT,CAAqBC,GAArB,EAA0BL,KAA1B,EAAiC;AAC/B,OAAK,IAAIM,GAAT,IAAgBN,KAAhB,EAAuB;AACrB,QAAIA,KAAK,CAACO,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;AAC7B,UAAIZ,WAAW,CAACW,GAAG,CAACC,GAAD,CAAJ,EAAWN,KAAK,CAACM,GAAD,CAAhB,CAAX,KAAsC,KAA1C,EAAiD;AAC/C,eAAO,KAAP;AACD;AACF;AACF;;AACD,SAAO,IAAP;AACD;AAED;AACA;AACA;;;AAEA,SAASZ,WAAT,CAAqBJ,GAArB,EAA0BU,KAA1B,EAAiC;AAC/B,MAAIlB,MAAM,CAACQ,GAAD,CAAN,KAAgB,QAApB,EAA8B;AAC5B,QAAIkB,KAAK,CAACC,OAAN,CAAcnB,GAAd,KAAsBkB,KAAK,CAACC,OAAN,CAAcT,KAAd,CAA1B,EAAgD;AAC9C,aAAOG,UAAU,CAACb,GAAD,EAAMU,KAAN,CAAjB;AACD,KAFD,MAEO;AACL,aAAOI,WAAW,CAACd,GAAD,EAAMU,KAAN,CAAlB;AACD;AACF,GAND,MAMO;AACL,WAAOV,GAAG,KAAKU,KAAf;AACD;AACF;;AAED,SAASH,IAAT,CAAca,IAAd,EAAoB;AAClB,SAAO,UAASL,GAAT,EAAc;AACnB,WAAOA,GAAG,CAACK,IAAD,CAAV;AACD,GAFD;AAGD;;AAED,SAASrB,IAAT,CAAcC,GAAd,EAAmB;AACjB,SAAOA,GAAP;AACD","sourcesContent":["/*!\r\n * make-iterator <https://github.com/jonschlinkert/make-iterator>\r\n *\r\n * Copyright (c) 2014-2018, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar typeOf = require('kind-of');\r\n\r\nmodule.exports = function makeIterator(target, thisArg) {\r\n  switch (typeOf(target)) {\r\n    case 'undefined':\r\n    case 'null':\r\n      return noop;\r\n    case 'function':\r\n      // function is the first to improve perf (most common case)\r\n      // also avoid using `Function#call` if not needed, which boosts\r\n      // perf a lot in some cases\r\n      return (typeof thisArg !== 'undefined') ? function(val, i, arr) {\r\n        return target.call(thisArg, val, i, arr);\r\n      } : target;\r\n    case 'object':\r\n      return function(val) {\r\n        return deepMatches(val, target);\r\n      };\r\n    case 'regexp':\r\n      return function(str) {\r\n        return target.test(str);\r\n      };\r\n    case 'string':\r\n    case 'number':\r\n    default: {\r\n      return prop(target);\r\n    }\r\n  }\r\n};\r\n\r\nfunction containsMatch(array, value) {\r\n  var len = array.length;\r\n  var i = -1;\r\n\r\n  while (++i < len) {\r\n    if (deepMatches(array[i], value)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction matchArray(arr, value) {\r\n  var len = value.length;\r\n  var i = -1;\r\n\r\n  while (++i < len) {\r\n    if (!containsMatch(arr, value[i])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction matchObject(obj, value) {\r\n  for (var key in value) {\r\n    if (value.hasOwnProperty(key)) {\r\n      if (deepMatches(obj[key], value[key]) === false) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Recursively compare objects\r\n */\r\n\r\nfunction deepMatches(val, value) {\r\n  if (typeOf(val) === 'object') {\r\n    if (Array.isArray(val) && Array.isArray(value)) {\r\n      return matchArray(val, value);\r\n    } else {\r\n      return matchObject(val, value);\r\n    }\r\n  } else {\r\n    return val === value;\r\n  }\r\n}\r\n\r\nfunction prop(name) {\r\n  return function(obj) {\r\n    return obj[name];\r\n  };\r\n}\r\n\r\nfunction noop(val) {\r\n  return val;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}