{"ast":null,"code":"'use strict';\n\nvar Writable = require('flush-write-stream');\n\nfunction listenerCount(stream, evt) {\n  return stream.listeners(evt).length;\n}\n\nfunction hasListeners(stream) {\n  return !!(listenerCount(stream, 'readable') || listenerCount(stream, 'data'));\n}\n\nfunction sinker(file, enc, callback) {\n  callback();\n}\n\nfunction sink(stream) {\n  var sinkAdded = false;\n  var sinkOptions = {\n    objectMode: stream._readableState.objectMode\n  };\n  var sinkStream = new Writable(sinkOptions, sinker);\n\n  function addSink() {\n    if (sinkAdded) {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      return;\n    }\n\n    sinkAdded = true;\n    stream.pipe(sinkStream);\n  }\n\n  function removeSink(evt) {\n    if (evt !== 'readable' && evt !== 'data') {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      sinkAdded = false;\n      stream.unpipe(sinkStream);\n    }\n  }\n\n  stream.on('newListener', removeSink);\n  stream.on('removeListener', removeSink);\n  stream.on('removeListener', addSink); // Sink the stream to start flowing\n  // Do this on nextTick, it will flow at slowest speed of piped streams\n\n  process.nextTick(addSink);\n  return stream;\n}\n\nmodule.exports = sink;","map":{"version":3,"sources":["C:/frontend/node_modules/lead/index.js"],"names":["Writable","require","listenerCount","stream","evt","listeners","length","hasListeners","sinker","file","enc","callback","sink","sinkAdded","sinkOptions","objectMode","_readableState","sinkStream","addSink","pipe","removeSink","unpipe","on","process","nextTick","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,GAA/B,EAAoC;AAClC,SAAOD,MAAM,CAACE,SAAP,CAAiBD,GAAjB,EAAsBE,MAA7B;AACD;;AAED,SAASC,YAAT,CAAsBJ,MAAtB,EAA8B;AAC5B,SAAO,CAAC,EAAED,aAAa,CAACC,MAAD,EAAS,UAAT,CAAb,IAAqCD,aAAa,CAACC,MAAD,EAAS,MAAT,CAApD,CAAR;AACD;;AAED,SAASK,MAAT,CAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,QAA3B,EAAqC;AACnCA,EAAAA,QAAQ;AACT;;AAED,SAASC,IAAT,CAAcT,MAAd,EAAsB;AACpB,MAAIU,SAAS,GAAG,KAAhB;AAEA,MAAIC,WAAW,GAAG;AAChBC,IAAAA,UAAU,EAAEZ,MAAM,CAACa,cAAP,CAAsBD;AADlB,GAAlB;AAIA,MAAIE,UAAU,GAAG,IAAIjB,QAAJ,CAAac,WAAb,EAA0BN,MAA1B,CAAjB;;AAEA,WAASU,OAAT,GAAmB;AACjB,QAAIL,SAAJ,EAAe;AACb;AACD;;AAED,QAAIN,YAAY,CAACJ,MAAD,CAAhB,EAA0B;AACxB;AACD;;AAEDU,IAAAA,SAAS,GAAG,IAAZ;AACAV,IAAAA,MAAM,CAACgB,IAAP,CAAYF,UAAZ;AACD;;AAED,WAASG,UAAT,CAAoBhB,GAApB,EAAyB;AACvB,QAAIA,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,MAAlC,EAA0C;AACxC;AACD;;AAED,QAAIG,YAAY,CAACJ,MAAD,CAAhB,EAA0B;AACxBU,MAAAA,SAAS,GAAG,KAAZ;AACAV,MAAAA,MAAM,CAACkB,MAAP,CAAcJ,UAAd;AACD;AACF;;AAEDd,EAAAA,MAAM,CAACmB,EAAP,CAAU,aAAV,EAAyBF,UAAzB;AACAjB,EAAAA,MAAM,CAACmB,EAAP,CAAU,gBAAV,EAA4BF,UAA5B;AACAjB,EAAAA,MAAM,CAACmB,EAAP,CAAU,gBAAV,EAA4BJ,OAA5B,EAnCoB,CAqCpB;AACA;;AACAK,EAAAA,OAAO,CAACC,QAAR,CAAiBN,OAAjB;AAEA,SAAOf,MAAP;AACD;;AAEDsB,MAAM,CAACC,OAAP,GAAiBd,IAAjB","sourcesContent":["'use strict';\r\n\r\nvar Writable = require('flush-write-stream');\r\n\r\nfunction listenerCount(stream, evt) {\r\n  return stream.listeners(evt).length;\r\n}\r\n\r\nfunction hasListeners(stream) {\r\n  return !!(listenerCount(stream, 'readable') || listenerCount(stream, 'data'));\r\n}\r\n\r\nfunction sinker(file, enc, callback) {\r\n  callback();\r\n}\r\n\r\nfunction sink(stream) {\r\n  var sinkAdded = false;\r\n\r\n  var sinkOptions = {\r\n    objectMode: stream._readableState.objectMode,\r\n  };\r\n\r\n  var sinkStream = new Writable(sinkOptions, sinker);\r\n\r\n  function addSink() {\r\n    if (sinkAdded) {\r\n      return;\r\n    }\r\n\r\n    if (hasListeners(stream)) {\r\n      return;\r\n    }\r\n\r\n    sinkAdded = true;\r\n    stream.pipe(sinkStream);\r\n  }\r\n\r\n  function removeSink(evt) {\r\n    if (evt !== 'readable' && evt !== 'data') {\r\n      return;\r\n    }\r\n\r\n    if (hasListeners(stream)) {\r\n      sinkAdded = false;\r\n      stream.unpipe(sinkStream);\r\n    }\r\n  }\r\n\r\n  stream.on('newListener', removeSink);\r\n  stream.on('removeListener', removeSink);\r\n  stream.on('removeListener', addSink);\r\n\r\n  // Sink the stream to start flowing\r\n  // Do this on nextTick, it will flow at slowest speed of piped streams\r\n  process.nextTick(addSink);\r\n\r\n  return stream;\r\n}\r\n\r\nmodule.exports = sink;\r\n"]},"metadata":{},"sourceType":"script"}