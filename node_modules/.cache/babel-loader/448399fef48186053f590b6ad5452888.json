{"ast":null,"code":"'use strict';\n\nvar assert = require('assert');\n\nvar metadata = require('./helpers/metadata');\n\nfunction set(name, fn) {\n  assert(name, 'Task name must be specified');\n  assert(typeof name === 'string', 'Task name must be a string');\n  assert(typeof fn === 'function', 'Task function must be specified');\n\n  function taskWrapper() {\n    return fn.apply(this, arguments);\n  }\n\n  function unwrap() {\n    return fn;\n  }\n\n  taskWrapper.unwrap = unwrap;\n  taskWrapper.displayName = name;\n  var meta = metadata.get(fn) || {};\n  var nodes = [];\n\n  if (meta.branch) {\n    nodes.push(meta.tree);\n  }\n\n  var task = this._registry.set(name, taskWrapper) || taskWrapper;\n  metadata.set(task, {\n    name: name,\n    orig: fn,\n    tree: {\n      label: name,\n      type: 'task',\n      nodes: nodes\n    }\n  });\n}\n\nmodule.exports = set;","map":{"version":3,"sources":["C:/frontend/node_modules/undertaker/lib/set-task.js"],"names":["assert","require","metadata","set","name","fn","taskWrapper","apply","arguments","unwrap","displayName","meta","get","nodes","branch","push","tree","task","_registry","orig","label","type","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AAEA,SAASE,GAAT,CAAaC,IAAb,EAAmBC,EAAnB,EAAuB;AACrBL,EAAAA,MAAM,CAACI,IAAD,EAAO,6BAAP,CAAN;AACAJ,EAAAA,MAAM,CAAC,OAAOI,IAAP,KAAgB,QAAjB,EAA2B,4BAA3B,CAAN;AACAJ,EAAAA,MAAM,CAAC,OAAOK,EAAP,KAAc,UAAf,EAA2B,iCAA3B,CAAN;;AAEA,WAASC,WAAT,GAAuB;AACrB,WAAOD,EAAE,CAACE,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAP;AACD;;AAED,WAASC,MAAT,GAAkB;AAChB,WAAOJ,EAAP;AACD;;AAEDC,EAAAA,WAAW,CAACG,MAAZ,GAAqBA,MAArB;AACAH,EAAAA,WAAW,CAACI,WAAZ,GAA0BN,IAA1B;AAEA,MAAIO,IAAI,GAAGT,QAAQ,CAACU,GAAT,CAAaP,EAAb,KAAoB,EAA/B;AACA,MAAIQ,KAAK,GAAG,EAAZ;;AACA,MAAIF,IAAI,CAACG,MAAT,EAAiB;AACfD,IAAAA,KAAK,CAACE,IAAN,CAAWJ,IAAI,CAACK,IAAhB;AACD;;AAED,MAAIC,IAAI,GAAG,KAAKC,SAAL,CAAef,GAAf,CAAmBC,IAAnB,EAAyBE,WAAzB,KAAyCA,WAApD;AAEAJ,EAAAA,QAAQ,CAACC,GAAT,CAAac,IAAb,EAAmB;AACjBb,IAAAA,IAAI,EAAEA,IADW;AAEjBe,IAAAA,IAAI,EAAEd,EAFW;AAGjBW,IAAAA,IAAI,EAAE;AACJI,MAAAA,KAAK,EAAEhB,IADH;AAEJiB,MAAAA,IAAI,EAAE,MAFF;AAGJR,MAAAA,KAAK,EAAEA;AAHH;AAHW,GAAnB;AASD;;AAEDS,MAAM,CAACC,OAAP,GAAiBpB,GAAjB","sourcesContent":["'use strict';\r\n\r\nvar assert = require('assert');\r\n\r\nvar metadata = require('./helpers/metadata');\r\n\r\nfunction set(name, fn) {\r\n  assert(name, 'Task name must be specified');\r\n  assert(typeof name === 'string', 'Task name must be a string');\r\n  assert(typeof fn === 'function', 'Task function must be specified');\r\n\r\n  function taskWrapper() {\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  function unwrap() {\r\n    return fn;\r\n  }\r\n\r\n  taskWrapper.unwrap = unwrap;\r\n  taskWrapper.displayName = name;\r\n\r\n  var meta = metadata.get(fn) || {};\r\n  var nodes = [];\r\n  if (meta.branch) {\r\n    nodes.push(meta.tree);\r\n  }\r\n\r\n  var task = this._registry.set(name, taskWrapper) || taskWrapper;\r\n\r\n  metadata.set(task, {\r\n    name: name,\r\n    orig: fn,\r\n    tree: {\r\n      label: name,\r\n      type: 'task',\r\n      nodes: nodes,\r\n    },\r\n  });\r\n}\r\n\r\nmodule.exports = set;\r\n"]},"metadata":{},"sourceType":"script"}