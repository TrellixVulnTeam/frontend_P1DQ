{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend\\\\src\\\\views\\\\examples\\\\BoardInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Button, Input } from \"reactstrap\";\nimport moment from 'moment'; // 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\n\nimport 'moment/locale/ko';\nimport TestPage from \"./TestPage\";\nimport { useParams } from \"react-router-dom\";\nimport { identifier } from \"@babel/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardInput() {\n  _s();\n\n  const nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\n  const {\n    mode\n  } = useParams();\n  alert(mode);\n  const [Board, setBoard] = useState({\n    idx: null,\n    title: \" \",\n    content: \" \",\n    board_date: nowTime,\n    id: \"test\",\n    view: \"0\"\n  });\n  let pageHeader = /*#__PURE__*/React.createRef();\n  React.useEffect(() => {\n    axios.get('http://localhost:8080/api/board/').then(function (response) {\n      setBoard(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const f3 = async () => {\n    if (mode === 'new') {\n      //new\n      axios.post('http://localhost:8080/api/board', Board).then(function (response) {\n        console.log(response);\n        window.location.href = 'http://localhost:3000/boardread/' + response.data.idx;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      //update\n      axios.put('http://localhost:8080/api/board/' + Board.idx, Board).then(function (response) {\n        console.log(response);\n        window.location.href = 'http://localhost:3000/boardread/' + Board.idx;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  const Content = () => {\n    if (mode === 'new') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header-image\",\n          style: {\n            backgroundImage: \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\"\n          },\n          ref: pageHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-center\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"title\",\n              children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"\\uC81C\\uBAA9...\",\n                type: \"text\",\n                name: \"title\",\n                onChange: ({\n                  target: {\n                    value\n                  }\n                }) => setBoard({\n                  title: value,\n                  content: Board.content,\n                  board_date: Board.board_date,\n                  id: Board.id,\n                  view: Board.view\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"\\uB0B4\\uC6A9...\",\n                type: \"textarea\",\n                name: \"content\",\n                onChange: ({\n                  target: {\n                    value\n                  }\n                }) => setBoard({\n                  title: Board.title,\n                  content: value,\n                  board_date: Board.board_date,\n                  id: Board.id,\n                  view: Board.view\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              className: \"btn-view\",\n              color: \"black\",\n              href: \"../board-page\",\n              size: \"5px\",\n              children: \"\\uBAA9\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              className: \"btn-board\",\n              color: \"black\" // href=\"\"\n              ,\n              onClick: f3,\n              size: \"5px\",\n              children: \"\\uB4F1\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 1\n  }, this);\n}\n\n_s(BoardInput, \"0zHL4ZemZSQxxsaTJgQXWxEEvFo=\", false, function () {\n  return [useParams];\n});\n\n_c = BoardInput;\nexport default BoardInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardInput\");","map":{"version":3,"sources":["C:/frontend/src/views/examples/BoardInput.js"],"names":["React","useState","axios","Container","Button","Input","moment","TestPage","useParams","identifier","BoardInput","nowTime","format","mode","alert","Board","setBoard","idx","title","content","board_date","id","view","pageHeader","createRef","useEffect","get","then","response","data","catch","error","console","log","f3","post","window","location","href","put","Content","backgroundImage","require","default","target","value"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\"\r\nimport axios from \"axios\";\r\nimport {Container, Button, Input } from \"reactstrap\";\r\nimport moment from 'moment';\r\n// 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\r\nimport 'moment/locale/ko';\r\nimport TestPage from \"./TestPage\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { identifier } from \"@babel/types\";\r\nfunction BoardInput() {\r\n   \r\nconst nowTime = moment().format('YYYY-MM-DD HH:mm:ss'); \r\n\r\nconst {mode} = useParams(); \r\nalert(mode)\r\n    const [Board, setBoard] = useState({\r\n      idx:null,\r\n         title: \" \",\r\n         content: \" \",\r\n         board_date: nowTime,\r\n         id: \"test\",        \r\n         view: \"0\"\r\n}\r\n      );\r\n   \r\n     let pageHeader = React.createRef();\r\n\r\n     React.useEffect(() => {\r\n      axios.get('http://localhost:8080/api/board/')\r\n      .then(function (response) {\r\n          setBoard(response.data);\r\n    \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    }, []);\r\n     const f3 = async () => {\r\n       if(mode==='new'){ //new\r\n        axios.post('http://localhost:8080/api/board', Board)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        window.location.href ='http://localhost:3000/boardread/'+response.data.idx\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }else { //update\r\n      axios.put('http://localhost:8080/api/board/'+Board.idx, Board)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        window.location.href ='http://localhost:3000/boardread/'+Board.idx\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n      }\r\n\r\nconst Content=()=>{\r\n  if(mode === 'new'){\r\n    return(\r\n<div className=\"page-header\">\r\n        <div\r\n          className=\"page-header-image\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\",\r\n          }}\r\n          ref={pageHeader}\r\n        ></div>\r\n        <div className=\"content-center\">\r\n          <Container>\r\n            <h1 className=\"title\">자유게시판</h1><br/>\r\n            <h2><Input\r\n            placeholder=\"제목...\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n\r\n            onChange={({ target: { value } }) => \r\n             setBoard({\r\n                 title: value,\r\n                 content: Board.content,\r\n                 board_date: Board.board_date,\r\n                id: Board.id,        \r\n                view: Board.view\r\n        })\r\n \r\n    }\r\n\r\n            ></Input></h2>\r\n            \r\n            <h2><Input\r\n            placeholder=\"내용...\"\r\n            type=\"textarea\"\r\n            name=\"content\"\r\n            onChange={({ target: { value } }) => setBoard({\r\n                title: Board.title,\r\n                content: value,\r\n                board_date: Board.board_date,\r\n                id: Board.id,        \r\n                view: Board.view\r\n       })}\r\n            ></Input></h2>\r\n            <br/>\r\n            <Button\r\n            block\r\n            className=\"btn-view\"\r\n            color=\"black\"\r\n            href=\"../board-page\"\r\n            size=\"5px\"\r\n            >\r\n                목록\r\n                </Button>\r\n            <Button\r\n            block\r\n            className=\"btn-board\"\r\n            color=\"black\"\r\n            // href=\"\"\r\n            onClick={f3}\r\n            size=\"5px\"\r\n            >\r\n                등록\r\n                </Button>\r\n                \r\n          </Container>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n    return(\r\n<div>{Content}</div>\r\n\r\n    )\r\n}\r\n\r\nexport default BoardInput;"]},"metadata":{},"sourceType":"module"}