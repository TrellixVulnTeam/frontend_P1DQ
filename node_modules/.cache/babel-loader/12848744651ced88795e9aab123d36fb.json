{"ast":null,"code":"'use strict';\n\nvar lead = require('lead');\n\nvar pumpify = require('pumpify');\n\nvar mkdirpStream = require('fs-mkdirp-stream');\n\nvar createResolver = require('resolve-options');\n\nvar config = require('./options');\n\nvar prepare = require('./prepare');\n\nvar sourcemap = require('./sourcemap');\n\nvar writeContents = require('./write-contents');\n\nvar folderConfig = {\n  outFolder: {\n    type: 'string'\n  }\n};\n\nfunction dest(outFolder, opt) {\n  if (!outFolder) {\n    throw new Error('Invalid dest() folder argument.' + ' Please specify a non-empty string or a function.');\n  }\n\n  var optResolver = createResolver(config, opt);\n  var folderResolver = createResolver(folderConfig, {\n    outFolder: outFolder\n  });\n\n  function dirpath(file, callback) {\n    var dirMode = optResolver.resolve('dirMode', file);\n    callback(null, file.dirname, dirMode);\n  }\n\n  var saveStream = pumpify.obj(prepare(folderResolver, optResolver), sourcemap(optResolver), mkdirpStream.obj(dirpath), writeContents(optResolver)); // Sink the output stream to start flowing\n\n  return lead(saveStream);\n}\n\nmodule.exports = dest;","map":{"version":3,"sources":["C:/frontend/node_modules/vinyl-fs/lib/dest/index.js"],"names":["lead","require","pumpify","mkdirpStream","createResolver","config","prepare","sourcemap","writeContents","folderConfig","outFolder","type","dest","opt","Error","optResolver","folderResolver","dirpath","file","callback","dirMode","resolve","dirname","saveStream","obj","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIM,SAAS,GAAGN,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,kBAAD,CAA3B;;AAEA,IAAIQ,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADM,CAAnB;;AAMA,SAASC,IAAT,CAAcF,SAAd,EAAyBG,GAAzB,EAA8B;AAC5B,MAAI,CAACH,SAAL,EAAgB;AACd,UAAM,IAAII,KAAJ,CAAU,oCACd,mDADI,CAAN;AAED;;AAED,MAAIC,WAAW,GAAGX,cAAc,CAACC,MAAD,EAASQ,GAAT,CAAhC;AACA,MAAIG,cAAc,GAAGZ,cAAc,CAACK,YAAD,EAAe;AAAEC,IAAAA,SAAS,EAAEA;AAAb,GAAf,CAAnC;;AAEA,WAASO,OAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;AAC/B,QAAIC,OAAO,GAAGL,WAAW,CAACM,OAAZ,CAAoB,SAApB,EAA+BH,IAA/B,CAAd;AAEAC,IAAAA,QAAQ,CAAC,IAAD,EAAOD,IAAI,CAACI,OAAZ,EAAqBF,OAArB,CAAR;AACD;;AAED,MAAIG,UAAU,GAAGrB,OAAO,CAACsB,GAAR,CACflB,OAAO,CAACU,cAAD,EAAiBD,WAAjB,CADQ,EAEfR,SAAS,CAACQ,WAAD,CAFM,EAGfZ,YAAY,CAACqB,GAAb,CAAiBP,OAAjB,CAHe,EAIfT,aAAa,CAACO,WAAD,CAJE,CAAjB,CAf4B,CAsB5B;;AACA,SAAOf,IAAI,CAACuB,UAAD,CAAX;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBd,IAAjB","sourcesContent":["'use strict';\r\n\r\nvar lead = require('lead');\r\nvar pumpify = require('pumpify');\r\nvar mkdirpStream = require('fs-mkdirp-stream');\r\nvar createResolver = require('resolve-options');\r\n\r\nvar config = require('./options');\r\nvar prepare = require('./prepare');\r\nvar sourcemap = require('./sourcemap');\r\nvar writeContents = require('./write-contents');\r\n\r\nvar folderConfig = {\r\n  outFolder: {\r\n    type: 'string',\r\n  },\r\n};\r\n\r\nfunction dest(outFolder, opt) {\r\n  if (!outFolder) {\r\n    throw new Error('Invalid dest() folder argument.' +\r\n      ' Please specify a non-empty string or a function.');\r\n  }\r\n\r\n  var optResolver = createResolver(config, opt);\r\n  var folderResolver = createResolver(folderConfig, { outFolder: outFolder });\r\n\r\n  function dirpath(file, callback) {\r\n    var dirMode = optResolver.resolve('dirMode', file);\r\n\r\n    callback(null, file.dirname, dirMode);\r\n  }\r\n\r\n  var saveStream = pumpify.obj(\r\n    prepare(folderResolver, optResolver),\r\n    sourcemap(optResolver),\r\n    mkdirpStream.obj(dirpath),\r\n    writeContents(optResolver)\r\n  );\r\n\r\n  // Sink the output stream to start flowing\r\n  return lead(saveStream);\r\n}\r\n\r\nmodule.exports = dest;\r\n"]},"metadata":{},"sourceType":"script"}