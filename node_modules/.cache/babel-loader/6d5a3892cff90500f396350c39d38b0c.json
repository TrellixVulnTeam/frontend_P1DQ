{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend\\\\src\\\\views\\\\Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Login from 'src/components/LoginPage.js';\nimport Main from 'src/components/index-Page.js';\nimport 'semantic-ui-css/semantic.min.css'; // reactstrap components\n// import {\n// } from \"reactstrap\";\n// core components\n\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\nimport IndexHeader from \"components/Headers/IndexHeader.js\";\nimport DarkFooter from \"components/Footers/DarkFooter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Index() {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  React.useEffect(() => {\n    if (sessionStorage.getItem('user_id') === null) {\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\n      console.log('isLogin ?? :: ', isLogin);\n    } else {\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\n      // 로그인 상태 변경\n      setIsLogin(true);\n      console.log('isLogin ?? :: ', isLogin);\n    }\n\n    document.body.classList.add(\"index-page\");\n    document.body.classList.add(\"sidebar-collapse\");\n    document.documentElement.classList.remove(\"nav-open\");\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n    return function cleanup() {\n      document.body.classList.remove(\"index-page\");\n      document.body.classList.remove(\"sidebar-collapse\");\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLogin ?\n      /*#__PURE__*/\n      // Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\n      _jsxDEV(Main, {\n        isLogin: isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(IndexNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(IndexHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DarkFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Index, \"hT9YX5q3Ouj0n/k+Fvtlr/oV70A=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/frontend/src/views/Index.js"],"names":["React","useState","Login","Main","IndexNavbar","IndexHeader","DarkFooter","Index","isLogin","setIsLogin","useEffect","sessionStorage","getItem","console","log","document","body","classList","add","documentElement","remove","window","scrollTo","scrollTop","cleanup"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAO,kCAAP,C,CACA;AACA;AACA;AAEA;;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,QAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,MAAsC,IAAzC,EAA8C;AAC5C;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,OAA9B;AACD,KAHH,MAGS;AACP;AACA;AACEC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,OAA9B;AACD;;AACHO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,YAA5B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,kBAA5B;AACAH,IAAAA,QAAQ,CAACI,eAAT,CAAyBF,SAAzB,CAAmCG,MAAnC,CAA0C,UAA1C;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAP,IAAAA,QAAQ,CAACC,IAAT,CAAcO,SAAd,GAA0B,CAA1B;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBT,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,YAA/B;AACAL,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,kBAA/B;AACD,KAHD;AAID,GAnBD;AAoBA,sBACE;AAAA,4BACA;AAAA,gBACCZ,OAAO;AAAA;AACN;AACA,cAAC,IAAD;AAAM,QAAA,OAAO,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,cAFM,gBAGN,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADA,eAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAeD;;GAtCQD,K;;KAAAA,K;AAwCT,eAAeA,KAAf","sourcesContent":["import React ,{useState } from \"react\";\r\nimport Login from 'src/components/LoginPage.js';\r\nimport Main from 'src/components/index-Page.js';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n// reactstrap components\r\n// import {\r\n// } from \"reactstrap\";\r\n\r\n// core components\r\nimport IndexNavbar from \"components/Navbars/IndexNavbar.js\";\r\nimport IndexHeader from \"components/Headers/IndexHeader.js\";\r\nimport DarkFooter from \"components/Footers/DarkFooter.js\";\r\n\r\n\r\nfunction Index() {\r\n  const [isLogin, setIsLogin] = useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if(sessionStorage.getItem('user_id') === null){\r\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\r\n        console.log('isLogin ?? :: ', isLogin)\r\n      } else {\r\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\r\n      // 로그인 상태 변경\r\n        setIsLogin(true)\r\n        console.log('isLogin ?? :: ', isLogin)\r\n      }\r\n    document.body.classList.add(\"index-page\");\r\n    document.body.classList.add(\"sidebar-collapse\");\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n    window.scrollTo(0, 0);\r\n    document.body.scrollTop = 0;\r\n    return function cleanup() {\r\n      document.body.classList.remove(\"index-page\");\r\n      document.body.classList.remove(\"sidebar-collapse\");\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n    <div>\r\n    {isLogin ? \r\n      // Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\r\n      <Main isLogin={isLogin} /> : \r\n      <Login />}\r\n     </div>\r\n      <IndexNavbar />\r\n      <div className=\"wrapper\">\r\n        <IndexHeader />\r\n        <DarkFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}