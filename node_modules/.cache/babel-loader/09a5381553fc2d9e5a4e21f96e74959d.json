{"ast":null,"code":"'use strict';\n\nvar isRelative = require('is-relative');\n\nvar isWindows = require('is-windows');\n/**\r\n * Expose `isAbsolute`\r\n */\n\n\nmodule.exports = isAbsolute;\n/**\r\n * Returns true if a file path is absolute.\r\n *\r\n * @param  {String} `fp`\r\n * @return {Boolean}\r\n */\n\nfunction isAbsolute(fp) {\n  if (typeof fp !== 'string') {\n    throw new TypeError('isAbsolute expects a string.');\n  }\n\n  return isWindows() ? isAbsolute.win32(fp) : isAbsolute.posix(fp);\n}\n/**\r\n * Test posix paths.\r\n */\n\n\nisAbsolute.posix = function posixPath(fp) {\n  return fp.charAt(0) === '/';\n};\n/**\r\n * Test windows paths.\r\n */\n\n\nisAbsolute.win32 = function win32(fp) {\n  if (/[a-z]/i.test(fp.charAt(0)) && fp.charAt(1) === ':' && fp.charAt(2) === '\\\\') {\n    return true;\n  } // Microsoft Azure absolute filepath\n\n\n  if (fp.slice(0, 2) === '\\\\\\\\') {\n    return true;\n  }\n\n  return !isRelative(fp);\n};","map":{"version":3,"sources":["C:/frontend/node_modules/is-absolute/index.js"],"names":["isRelative","require","isWindows","module","exports","isAbsolute","fp","TypeError","win32","posix","posixPath","charAt","test","slice"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;AAEA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAT,CAAoBC,EAApB,EAAwB;AACtB,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,UAAM,IAAIC,SAAJ,CAAc,8BAAd,CAAN;AACD;;AACD,SAAOL,SAAS,KAAKG,UAAU,CAACG,KAAX,CAAiBF,EAAjB,CAAL,GAA4BD,UAAU,CAACI,KAAX,CAAiBH,EAAjB,CAA5C;AACD;AAED;AACA;AACA;;;AAEAD,UAAU,CAACI,KAAX,GAAmB,SAASC,SAAT,CAAmBJ,EAAnB,EAAuB;AACxC,SAAOA,EAAE,CAACK,MAAH,CAAU,CAAV,MAAiB,GAAxB;AACD,CAFD;AAIA;AACA;AACA;;;AAEAN,UAAU,CAACG,KAAX,GAAmB,SAASA,KAAT,CAAeF,EAAf,EAAmB;AACpC,MAAI,SAASM,IAAT,CAAcN,EAAE,CAACK,MAAH,CAAU,CAAV,CAAd,KAA+BL,EAAE,CAACK,MAAH,CAAU,CAAV,MAAiB,GAAhD,IAAuDL,EAAE,CAACK,MAAH,CAAU,CAAV,MAAiB,IAA5E,EAAkF;AAChF,WAAO,IAAP;AACD,GAHmC,CAIpC;;;AACA,MAAIL,EAAE,CAACO,KAAH,CAAS,CAAT,EAAY,CAAZ,MAAmB,MAAvB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AACD,SAAO,CAACb,UAAU,CAACM,EAAD,CAAlB;AACD,CATD","sourcesContent":["'use strict';\r\n\r\nvar isRelative = require('is-relative');\r\nvar isWindows = require('is-windows');\r\n\r\n/**\r\n * Expose `isAbsolute`\r\n */\r\n\r\nmodule.exports = isAbsolute;\r\n\r\n/**\r\n * Returns true if a file path is absolute.\r\n *\r\n * @param  {String} `fp`\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isAbsolute(fp) {\r\n  if (typeof fp !== 'string') {\r\n    throw new TypeError('isAbsolute expects a string.');\r\n  }\r\n  return isWindows() ? isAbsolute.win32(fp) : isAbsolute.posix(fp);\r\n}\r\n\r\n/**\r\n * Test posix paths.\r\n */\r\n\r\nisAbsolute.posix = function posixPath(fp) {\r\n  return fp.charAt(0) === '/';\r\n};\r\n\r\n/**\r\n * Test windows paths.\r\n */\r\n\r\nisAbsolute.win32 = function win32(fp) {\r\n  if (/[a-z]/i.test(fp.charAt(0)) && fp.charAt(1) === ':' && fp.charAt(2) === '\\\\') {\r\n    return true;\r\n  }\r\n  // Microsoft Azure absolute filepath\r\n  if (fp.slice(0, 2) === '\\\\\\\\') {\r\n    return true;\r\n  }\r\n  return !isRelative(fp);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}