{"ast":null,"code":"/*!\r\n * collection-map <https://github.com/jonschlinkert/collection-map>\r\n *\r\n * Copyright (c) 2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n\nvar makeIterator = require('make-iterator');\n\nvar forOwn = require('for-own');\n\nvar map = require('arr-map');\n\nmodule.exports = function (collection, fn, thisArg) {\n  if (!Array.isArray(collection)) {\n    var iterator = makeIterator(fn, thisArg);\n    var result = [];\n    forOwn(collection, function (value, key) {\n      result.push(iterator(value, key, collection));\n    });\n    return result;\n  }\n\n  return map(collection, fn, thisArg);\n};","map":{"version":3,"sources":["C:/frontend/node_modules/collection-map/index.js"],"names":["makeIterator","require","forOwn","map","module","exports","collection","fn","thisArg","Array","isArray","iterator","result","value","key","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,SAAD,CAAjB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAASC,UAAT,EAAqBC,EAArB,EAAyBC,OAAzB,EAAkC;AACjD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,UAAd,CAAL,EAAgC;AAC9B,QAAIK,QAAQ,GAAGX,YAAY,CAACO,EAAD,EAAKC,OAAL,CAA3B;AACA,QAAII,MAAM,GAAG,EAAb;AAEAV,IAAAA,MAAM,CAACI,UAAD,EAAa,UAASO,KAAT,EAAgBC,GAAhB,EAAqB;AACtCF,MAAAA,MAAM,CAACG,IAAP,CAAYJ,QAAQ,CAACE,KAAD,EAAQC,GAAR,EAAaR,UAAb,CAApB;AACD,KAFK,CAAN;AAGA,WAAOM,MAAP;AACD;;AACD,SAAOT,GAAG,CAACG,UAAD,EAAaC,EAAb,EAAiBC,OAAjB,CAAV;AACD,CAXD","sourcesContent":["/*!\r\n * collection-map <https://github.com/jonschlinkert/collection-map>\r\n *\r\n * Copyright (c) 2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar makeIterator = require('make-iterator');\r\nvar forOwn = require('for-own');\r\nvar map = require('arr-map');\r\n\r\nmodule.exports = function(collection, fn, thisArg) {\r\n  if (!Array.isArray(collection)) {\r\n    var iterator = makeIterator(fn, thisArg);\r\n    var result = [];\r\n\r\n    forOwn(collection, function(value, key) {\r\n      result.push(iterator(value, key, collection));\r\n    });\r\n    return result;\r\n  }\r\n  return map(collection, fn, thisArg);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}