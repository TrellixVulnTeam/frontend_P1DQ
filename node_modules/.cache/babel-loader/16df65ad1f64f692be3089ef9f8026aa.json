{"ast":null,"code":"\"use strict\";\n\nmodule.exports = make;\nmodule.exports.ctor = ctor;\nmodule.exports.objCtor = objCtor;\nmodule.exports.obj = obj;\n\nvar through2 = require(\"through2\");\n\nvar xtend = require(\"xtend\");\n\nfunction ctor(options, fn) {\n  if (typeof options == \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  var Filter = through2.ctor(options, function (chunk, encoding, callback) {\n    if (this.options.wantStrings) chunk = chunk.toString();\n\n    try {\n      if (fn.call(this, chunk, this._index++)) this.push(chunk);\n      return callback();\n    } catch (e) {\n      return callback(e);\n    }\n  });\n  Filter.prototype._index = 0;\n  return Filter;\n}\n\nfunction objCtor(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  options = xtend({\n    objectMode: true,\n    highWaterMark: 16\n  }, options);\n  return ctor(options, fn);\n}\n\nfunction make(options, fn) {\n  return ctor(options, fn)();\n}\n\nfunction obj(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  options = xtend({\n    objectMode: true,\n    highWaterMark: 16\n  }, options);\n  return make(options, fn);\n}","map":{"version":3,"sources":["C:/frontend/node_modules/through2-filter/index.js"],"names":["module","exports","make","ctor","objCtor","obj","through2","require","xtend","options","fn","Filter","chunk","encoding","callback","wantStrings","toString","call","_index","push","e","prototype","objectMode","highWaterMark"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAF,MAAM,CAACC,OAAP,CAAeE,IAAf,GAAsBA,IAAtB;AACAH,MAAM,CAACC,OAAP,CAAeG,OAAf,GAAyBA,OAAzB;AACAJ,MAAM,CAACC,OAAP,CAAeI,GAAf,GAAqBA,GAArB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AAEA,SAASJ,IAAT,CAAcM,OAAd,EAAuBC,EAAvB,EAA2B;AACzB,MAAI,OAAOD,OAAP,IAAkB,UAAtB,EAAkC;AAChCC,IAAAA,EAAE,GAAGD,OAAL;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIE,MAAM,GAAGL,QAAQ,CAACH,IAAT,CAAcM,OAAd,EAAuB,UAAUG,KAAV,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;AACvE,QAAI,KAAKL,OAAL,CAAaM,WAAjB,EAA8BH,KAAK,GAAGA,KAAK,CAACI,QAAN,EAAR;;AAC9B,QAAI;AACF,UAAIN,EAAE,CAACO,IAAH,CAAQ,IAAR,EAAcL,KAAd,EAAqB,KAAKM,MAAL,EAArB,CAAJ,EAAyC,KAAKC,IAAL,CAAUP,KAAV;AACzC,aAAOE,QAAQ,EAAf;AACD,KAHD,CAGE,OAAOM,CAAP,EAAU;AACV,aAAON,QAAQ,CAACM,CAAD,CAAf;AACD;AACF,GARY,CAAb;AASAT,EAAAA,MAAM,CAACU,SAAP,CAAiBH,MAAjB,GAA0B,CAA1B;AACA,SAAOP,MAAP;AACD;;AAED,SAASP,OAAT,CAAiBK,OAAjB,EAA0BC,EAA1B,EAA8B;AAC5B,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,EAAE,GAAGD,OAAL;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AACDA,EAAAA,OAAO,GAAGD,KAAK,CAAC;AAACc,IAAAA,UAAU,EAAE,IAAb;AAAmBC,IAAAA,aAAa,EAAE;AAAlC,GAAD,EAAwCd,OAAxC,CAAf;AACA,SAAON,IAAI,CAACM,OAAD,EAAUC,EAAV,CAAX;AACD;;AAED,SAASR,IAAT,CAAcO,OAAd,EAAuBC,EAAvB,EAA2B;AACzB,SAAOP,IAAI,CAACM,OAAD,EAAUC,EAAV,CAAJ,EAAP;AACD;;AAED,SAASL,GAAT,CAAaI,OAAb,EAAsBC,EAAtB,EAA0B;AACxB,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,EAAE,GAAGD,OAAL;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AACDA,EAAAA,OAAO,GAAGD,KAAK,CAAC;AAACc,IAAAA,UAAU,EAAE,IAAb;AAAmBC,IAAAA,aAAa,EAAE;AAAlC,GAAD,EAAwCd,OAAxC,CAAf;AACA,SAAOP,IAAI,CAACO,OAAD,EAAUC,EAAV,CAAX;AACD","sourcesContent":["\"use strict\";\r\n\r\nmodule.exports = make\r\nmodule.exports.ctor = ctor\r\nmodule.exports.objCtor = objCtor\r\nmodule.exports.obj = obj\r\n\r\nvar through2 = require(\"through2\")\r\nvar xtend = require(\"xtend\")\r\n\r\nfunction ctor(options, fn) {\r\n  if (typeof options == \"function\") {\r\n    fn = options\r\n    options = {}\r\n  }\r\n\r\n  var Filter = through2.ctor(options, function (chunk, encoding, callback) {\r\n    if (this.options.wantStrings) chunk = chunk.toString()\r\n    try {\r\n      if (fn.call(this, chunk, this._index++)) this.push(chunk)\r\n      return callback()\r\n    } catch (e) {\r\n      return callback(e)\r\n    }\r\n  })\r\n  Filter.prototype._index = 0\r\n  return Filter\r\n}\r\n\r\nfunction objCtor(options, fn) {\r\n  if (typeof options === \"function\") {\r\n    fn = options\r\n    options = {}\r\n  }\r\n  options = xtend({objectMode: true, highWaterMark: 16}, options)\r\n  return ctor(options, fn)\r\n}\r\n\r\nfunction make(options, fn) {\r\n  return ctor(options, fn)()\r\n}\r\n\r\nfunction obj(options, fn) {\r\n  if (typeof options === \"function\") {\r\n    fn = options\r\n    options = {}\r\n  }\r\n  options = xtend({objectMode: true, highWaterMark: 16}, options)\r\n  return make(options, fn)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}