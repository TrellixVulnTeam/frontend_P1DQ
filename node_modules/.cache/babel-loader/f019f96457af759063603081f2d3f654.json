{"ast":null,"code":"var _jsxFileName = \"/Users/mac/frontend/src/views/examples/BoardInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Button, Input } from \"reactstrap\";\nimport moment from 'moment'; // 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\n\nimport 'moment/locale/ko';\nimport TestPage from \"./TestPage\";\nimport { useParams } from \"react-router-dom\";\nimport { identifier } from \"@babel/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardInput() {\n  _s();\n\n  const nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\n  const {\n    mode\n  } = useParams();\n  const [Board, setBoard] = useState({\n    idx: null,\n    title: \"\",\n    content: \"\",\n    board_date: nowTime,\n    id: \"test\",\n    view: \"0\"\n  });\n  let pageHeader = /*#__PURE__*/React.createRef();\n  React.useEffect(() => {\n    if (mode != 'new') {\n      axios.get('/api/board/' + mode).then(function (response) {\n        console.log(response);\n        setBoard(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, []);\n\n  const f3 = async () => {\n    if (mode === 'new') {\n      //new\n      axios.post('/api/board', Board).then(function (response) {\n        console.log(response);\n        window.location.href = '../../boardread/' + response.data.idx;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      //update\n      axios.put('/api/board/' + Board.idx, Board).then(function (response) {\n        console.log(response);\n        window.location.href = '../../boardread/' + Board.idx;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header-image\",\n      style: {\n        backgroundImage: \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\"\n      },\n      ref: pageHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-center\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uC81C\\uBAA9...\",\n            type: \"text\",\n            name: \"title\",\n            class: \"form-control2\",\n            value: Board.title,\n            onChange: ({\n              target: {\n                value\n              }\n            }) => setBoard({\n              idx: Board.idx,\n              title: value,\n              content: Board.content,\n              board_date: Board.board_date,\n              id: Board.id,\n              view: Board.view\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\uB0B4\\uC6A9...\",\n            type: \"textarea\",\n            name: \"content\",\n            value: Board.content,\n            onChange: ({\n              target: {\n                value\n              }\n            }) => setBoard({\n              idx: Board.idx,\n              title: Board.title,\n              content: value,\n              board_date: Board.board_date,\n              id: Board.id,\n              view: Board.view\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-viewboard\",\n          color: \"black\",\n          href: \"../board-page\",\n          size: \"5px\",\n          children: \"\\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-inputboard\",\n          color: \"black\" // href=\"\"\n          ,\n          onClick: f3,\n          size: \"5px\",\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 1\n  }, this);\n}\n\n_s(BoardInput, \"XAJtgyhIsg3yG+ps97sH5+lmHA0=\", false, function () {\n  return [useParams];\n});\n\n_c = BoardInput;\nexport default BoardInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardInput\");","map":{"version":3,"sources":["/Users/mac/frontend/src/views/examples/BoardInput.js"],"names":["React","useState","axios","Container","Button","Input","moment","TestPage","useParams","identifier","BoardInput","nowTime","format","mode","Board","setBoard","idx","title","content","board_date","id","view","pageHeader","createRef","useEffect","get","then","response","console","log","data","catch","error","f3","post","window","location","href","put","backgroundImage","require","default","target","value"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\"\nimport axios from \"axios\";\nimport {Container, Button, Input } from \"reactstrap\";\nimport moment from 'moment';\n// 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\nimport 'moment/locale/ko';\nimport TestPage from \"./TestPage\";\nimport { useParams } from \"react-router-dom\";\nimport { identifier } from \"@babel/types\";\nfunction BoardInput() {\n   \nconst nowTime = moment().format('YYYY-MM-DD HH:mm:ss'); \n\nconst {mode} = useParams(); \n\n    const [Board, setBoard] = useState({\n      idx:null,\n         title: \"\",\n         content: \"\",\n         board_date: nowTime,\n         id: \"test\",        \n         view: \"0\"\n}\n      );\n   \n     let pageHeader = React.createRef();\n\n     React.useEffect(() => {\n       if(mode != 'new'){\n      axios.get('/api/board/'+mode)\n      .then(function (response) {\n        console.log(response)\n          setBoard(response.data);\n    \n      })\n      .catch(function (error) {\n        console.log(error);\n      });}\n\n    }, []);\n  \n     const f3 = async () => {\n       if(mode==='new'){ //new\n        axios.post('/api/board', Board)\n      .then(function (response) {\n        console.log(response);\n        window.location.href ='../../boardread/'+response.data.idx\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }else { //update\n      axios.put('/api/board/'+Board.idx, Board)\n      .then(function (response) {\n        console.log(response);\n        window.location.href ='../../boardread/'+Board.idx\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n      }\n\n\n    return(\n<div className=\"page-header\">\n        <div\n          className=\"page-header-image\"\n          style={{\n            backgroundImage:\n              \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\",\n          }}\n          ref={pageHeader}\n        ></div>\n        <div className=\"content-center\">\n          <Container>\n            <h1 className=\"title\">자유게시판</h1><br/>\n            <h2><Input\n            placeholder=\"제목...\"\n            type=\"text\"\n            name=\"title\"\n            class=\"form-control2\"\n            value={Board.title}\n            onChange={({ target: { value } }) => \n             setBoard({\n               idx:Board.idx,\n                 title: value,\n                 content: Board.content,\n                 board_date: Board.board_date,\n                id: Board.id,        \n                view: Board.view\n        })\n \n    }\n\n            ></Input></h2>\n            \n            <h2><Input\n            placeholder=\"내용...\"\n            type=\"textarea\"\n            name=\"content\"\n            value={Board.content}\n            onChange={({ target: { value } }) => setBoard({\n              idx:Board.idx,\n                title: Board.title,\n                content: value,\n                board_date: Board.board_date,\n                id: Board.id,        \n                view: Board.view\n       })}\n            ></Input></h2>\n            <br/>\n            <Button\n            className=\"btn-viewboard\"\n            color=\"black\"\n            href=\"../board-page\"\n            size=\"5px\"\n            >\n                목록\n                </Button>\n            <Button\n            className=\"btn-inputboard\"\n            color=\"black\"\n            // href=\"\"\n            onClick={f3}\n            size=\"5px\"\n            >\n                등록\n                </Button>\n                \n          </Container>\n        </div>\n        \n      </div>\n\n    )\n}\n\nexport default BoardInput;"]},"metadata":{},"sourceType":"module"}