{"ast":null,"code":"'use strict';\n\nvar bach = require('bach');\n\nvar metadata = require('./helpers/metadata');\n\nvar buildTree = require('./helpers/buildTree');\n\nvar normalizeArgs = require('./helpers/normalizeArgs');\n\nvar createExtensions = require('./helpers/createExtensions');\n\nfunction parallel() {\n  var create = this._settle ? bach.settleParallel : bach.parallel;\n  var args = normalizeArgs(this._registry, arguments);\n  var extensions = createExtensions(this);\n  var fn = create(args, extensions);\n  var name = '<parallel>';\n  metadata.set(fn, {\n    name: name,\n    branch: true,\n    tree: {\n      label: name,\n      type: 'function',\n      branch: true,\n      nodes: buildTree(args)\n    }\n  });\n  return fn;\n}\n\nmodule.exports = parallel;","map":{"version":3,"sources":["C:/frontend/node_modules/undertaker/lib/parallel.js"],"names":["bach","require","metadata","buildTree","normalizeArgs","createExtensions","parallel","create","_settle","settleParallel","args","_registry","arguments","extensions","fn","name","set","branch","tree","label","type","nodes","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,yBAAD,CAA3B;;AACA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,4BAAD,CAA9B;;AAEA,SAASK,QAAT,GAAoB;AAClB,MAAIC,MAAM,GAAG,KAAKC,OAAL,GAAeR,IAAI,CAACS,cAApB,GAAqCT,IAAI,CAACM,QAAvD;AAEA,MAAII,IAAI,GAAGN,aAAa,CAAC,KAAKO,SAAN,EAAiBC,SAAjB,CAAxB;AACA,MAAIC,UAAU,GAAGR,gBAAgB,CAAC,IAAD,CAAjC;AACA,MAAIS,EAAE,GAAGP,MAAM,CAACG,IAAD,EAAOG,UAAP,CAAf;AACA,MAAIE,IAAI,GAAG,YAAX;AAEAb,EAAAA,QAAQ,CAACc,GAAT,CAAaF,EAAb,EAAiB;AACfC,IAAAA,IAAI,EAAEA,IADS;AAEfE,IAAAA,MAAM,EAAE,IAFO;AAGfC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEJ,IADH;AAEJK,MAAAA,IAAI,EAAE,UAFF;AAGJH,MAAAA,MAAM,EAAE,IAHJ;AAIJI,MAAAA,KAAK,EAAElB,SAAS,CAACO,IAAD;AAJZ;AAHS,GAAjB;AAUA,SAAOI,EAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBjB,QAAjB","sourcesContent":["'use strict';\r\n\r\nvar bach = require('bach');\r\n\r\nvar metadata = require('./helpers/metadata');\r\nvar buildTree = require('./helpers/buildTree');\r\nvar normalizeArgs = require('./helpers/normalizeArgs');\r\nvar createExtensions = require('./helpers/createExtensions');\r\n\r\nfunction parallel() {\r\n  var create = this._settle ? bach.settleParallel : bach.parallel;\r\n\r\n  var args = normalizeArgs(this._registry, arguments);\r\n  var extensions = createExtensions(this);\r\n  var fn = create(args, extensions);\r\n  var name = '<parallel>';\r\n\r\n  metadata.set(fn, {\r\n    name: name,\r\n    branch: true,\r\n    tree: {\r\n      label: name,\r\n      type: 'function',\r\n      branch: true,\r\n      nodes: buildTree(args),\r\n    },\r\n  });\r\n  return fn;\r\n}\r\n\r\nmodule.exports = parallel;\r\n"]},"metadata":{},"sourceType":"script"}