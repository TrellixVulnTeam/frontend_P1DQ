{"ast":null,"code":"// async-each MIT license (by Paul Miller from https://paulmillr.com).\n(function (globals) {\n  'use strict';\n\n  var each = function (items, next, callback) {\n    if (!Array.isArray(items)) throw new TypeError('each() expects array as first argument');\n    if (typeof next !== 'function') throw new TypeError('each() expects function as second argument');\n    if (typeof callback !== 'function') callback = Function.prototype; // no-op\n\n    if (items.length === 0) return callback(undefined, items);\n    var transformed = new Array(items.length);\n    var count = 0;\n    var returned = false;\n    items.forEach(function (item, index) {\n      next(item, function (error, transformedItem) {\n        if (returned) return;\n\n        if (error) {\n          returned = true;\n          return callback(error);\n        }\n\n        transformed[index] = transformedItem;\n        count += 1;\n        if (count === items.length) return callback(undefined, transformed);\n      });\n    });\n  };\n\n  if (typeof define !== 'undefined' && define.amd) {\n    define([], function () {\n      return each;\n    }); // RequireJS\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = each; // CommonJS\n  } else {\n    globals.asyncEach = each; // <script>\n  }\n})(this);","map":{"version":3,"sources":["C:/frontend/node_modules/async-each/index.js"],"names":["globals","each","items","next","callback","Array","isArray","TypeError","Function","prototype","length","undefined","transformed","count","returned","forEach","item","index","error","transformedItem","define","amd","module","exports","asyncEach"],"mappings":"AAAA;AACA,CAAC,UAASA,OAAT,EAAkB;AACjB;;AACA,MAAIC,IAAI,GAAG,UAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;AACzC,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAL,EAA2B,MAAM,IAAIK,SAAJ,CAAc,wCAAd,CAAN;AAC3B,QAAI,OAAOJ,IAAP,KAAgB,UAApB,EAAgC,MAAM,IAAII,SAAJ,CAAc,4CAAd,CAAN;AAChC,QAAI,OAAOH,QAAP,KAAoB,UAAxB,EAAoCA,QAAQ,GAAGI,QAAQ,CAACC,SAApB,CAHK,CAG0B;;AAEnE,QAAIP,KAAK,CAACQ,MAAN,KAAiB,CAArB,EAAwB,OAAON,QAAQ,CAACO,SAAD,EAAYT,KAAZ,CAAf;AAExB,QAAIU,WAAW,GAAG,IAAIP,KAAJ,CAAUH,KAAK,CAACQ,MAAhB,CAAlB;AACA,QAAIG,KAAK,GAAG,CAAZ;AACA,QAAIC,QAAQ,GAAG,KAAf;AAEAZ,IAAAA,KAAK,CAACa,OAAN,CAAc,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAClCd,MAAAA,IAAI,CAACa,IAAD,EAAO,UAASE,KAAT,EAAgBC,eAAhB,EAAiC;AAC1C,YAAIL,QAAJ,EAAc;;AACd,YAAII,KAAJ,EAAW;AACTJ,UAAAA,QAAQ,GAAG,IAAX;AACA,iBAAOV,QAAQ,CAACc,KAAD,CAAf;AACD;;AACDN,QAAAA,WAAW,CAACK,KAAD,CAAX,GAAqBE,eAArB;AACAN,QAAAA,KAAK,IAAI,CAAT;AACA,YAAIA,KAAK,KAAKX,KAAK,CAACQ,MAApB,EAA4B,OAAON,QAAQ,CAACO,SAAD,EAAYC,WAAZ,CAAf;AAC7B,OATG,CAAJ;AAUD,KAXD;AAYD,GAvBD;;AAyBA,MAAI,OAAOQ,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,GAA5C,EAAiD;AAC/CD,IAAAA,MAAM,CAAC,EAAD,EAAK,YAAW;AACpB,aAAOnB,IAAP;AACD,KAFK,CAAN,CAD+C,CAG3C;AACL,GAJD,MAIO,IAAI,OAAOqB,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;AAC1DD,IAAAA,MAAM,CAACC,OAAP,GAAiBtB,IAAjB,CAD0D,CACnC;AACxB,GAFM,MAEA;AACLD,IAAAA,OAAO,CAACwB,SAAR,GAAoBvB,IAApB,CADK,CACqB;AAC3B;AACF,CApCD,EAoCG,IApCH","sourcesContent":["// async-each MIT license (by Paul Miller from https://paulmillr.com).\r\n(function(globals) {\r\n  'use strict';\r\n  var each = function(items, next, callback) {\r\n    if (!Array.isArray(items)) throw new TypeError('each() expects array as first argument');\r\n    if (typeof next !== 'function') throw new TypeError('each() expects function as second argument');\r\n    if (typeof callback !== 'function') callback = Function.prototype; // no-op\r\n\r\n    if (items.length === 0) return callback(undefined, items);\r\n\r\n    var transformed = new Array(items.length);\r\n    var count = 0;\r\n    var returned = false;\r\n\r\n    items.forEach(function(item, index) {\r\n      next(item, function(error, transformedItem) {\r\n        if (returned) return;\r\n        if (error) {\r\n          returned = true;\r\n          return callback(error);\r\n        }\r\n        transformed[index] = transformedItem;\r\n        count += 1;\r\n        if (count === items.length) return callback(undefined, transformed);\r\n      });\r\n    });\r\n  };\r\n\r\n  if (typeof define !== 'undefined' && define.amd) {\r\n    define([], function() {\r\n      return each;\r\n    }); // RequireJS\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = each; // CommonJS\r\n  } else {\r\n    globals.asyncEach = each; // <script>\r\n  }\r\n})(this);\r\n"]},"metadata":{},"sourceType":"script"}