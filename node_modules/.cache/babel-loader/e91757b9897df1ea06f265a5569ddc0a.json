{"ast":null,"code":"'use strict';\n\nvar captureLastRun = require('last-run').capture;\n\nvar releaseLastRun = require('last-run').release;\n\nvar metadata = require('./metadata');\n\nvar uid = 0;\n\nfunction Storage(fn) {\n  var meta = metadata.get(fn);\n  this.fn = meta.orig || fn;\n  this.uid = uid++;\n  this.name = meta.name;\n  this.branch = meta.branch || false;\n  this.captureTime = Date.now();\n  this.startHr = [];\n}\n\nStorage.prototype.capture = function () {\n  captureLastRun(this.fn, this.captureTime);\n};\n\nStorage.prototype.release = function () {\n  releaseLastRun(this.fn);\n};\n\nfunction createExtensions(ee) {\n  return {\n    create: function (fn) {\n      return new Storage(fn);\n    },\n    before: function (storage) {\n      storage.startHr = process.hrtime();\n      ee.emit('start', {\n        uid: storage.uid,\n        name: storage.name,\n        branch: storage.branch,\n        time: Date.now()\n      });\n    },\n    after: function (result, storage) {\n      if (result && result.state === 'error') {\n        return this.error(result.value, storage);\n      }\n\n      storage.capture();\n      ee.emit('stop', {\n        uid: storage.uid,\n        name: storage.name,\n        branch: storage.branch,\n        duration: process.hrtime(storage.startHr),\n        time: Date.now()\n      });\n    },\n    error: function (error, storage) {\n      if (Array.isArray(error)) {\n        error = error[0];\n      }\n\n      storage.release();\n      ee.emit('error', {\n        uid: storage.uid,\n        name: storage.name,\n        branch: storage.branch,\n        error: error,\n        duration: process.hrtime(storage.startHr),\n        time: Date.now()\n      });\n    }\n  };\n}\n\nmodule.exports = createExtensions;","map":{"version":3,"sources":["C:/frontend/node_modules/undertaker/lib/helpers/createExtensions.js"],"names":["captureLastRun","require","capture","releaseLastRun","release","metadata","uid","Storage","fn","meta","get","orig","name","branch","captureTime","Date","now","startHr","prototype","createExtensions","ee","create","before","storage","process","hrtime","emit","time","after","result","state","error","value","duration","Array","isArray","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar captureLastRun = require('last-run').capture;\r\nvar releaseLastRun = require('last-run').release;\r\n\r\nvar metadata = require('./metadata');\r\n\r\nvar uid = 0;\r\n\r\nfunction Storage(fn) {\r\n  var meta = metadata.get(fn);\r\n\r\n  this.fn = meta.orig || fn;\r\n  this.uid = uid++;\r\n  this.name = meta.name;\r\n  this.branch = meta.branch || false;\r\n  this.captureTime = Date.now();\r\n  this.startHr = [];\r\n}\r\n\r\nStorage.prototype.capture = function() {\r\n  captureLastRun(this.fn, this.captureTime);\r\n};\r\n\r\nStorage.prototype.release = function() {\r\n  releaseLastRun(this.fn);\r\n};\r\n\r\nfunction createExtensions(ee) {\r\n  return {\r\n    create: function(fn) {\r\n      return new Storage(fn);\r\n    },\r\n    before: function(storage) {\r\n      storage.startHr = process.hrtime();\r\n      ee.emit('start', {\r\n        uid: storage.uid,\r\n        name: storage.name,\r\n        branch: storage.branch,\r\n        time: Date.now(),\r\n      });\r\n    },\r\n    after: function(result, storage) {\r\n      if (result && result.state === 'error') {\r\n        return this.error(result.value, storage);\r\n      }\r\n      storage.capture();\r\n      ee.emit('stop', {\r\n        uid: storage.uid,\r\n        name: storage.name,\r\n        branch: storage.branch,\r\n        duration: process.hrtime(storage.startHr),\r\n        time: Date.now(),\r\n      });\r\n    },\r\n    error: function(error, storage) {\r\n      if (Array.isArray(error)) {\r\n        error = error[0];\r\n      }\r\n      storage.release();\r\n      ee.emit('error', {\r\n        uid: storage.uid,\r\n        name: storage.name,\r\n        branch: storage.branch,\r\n        error: error,\r\n        duration: process.hrtime(storage.startHr),\r\n        time: Date.now(),\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nmodule.exports = createExtensions;\r\n"]},"metadata":{},"sourceType":"script"}