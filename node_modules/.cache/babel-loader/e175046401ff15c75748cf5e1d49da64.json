{"ast":null,"code":"'use strict';\n\nvar PassThrough = require('readable-stream').PassThrough;\n\nvar inherits = require('inherits');\n\nvar p = require('process-nextick-args');\n\nfunction Cloneable(stream, opts) {\n  if (!(this instanceof Cloneable)) {\n    return new Cloneable(stream, opts);\n  }\n\n  var objectMode = stream._readableState.objectMode;\n  this._original = stream;\n  this._clonesCount = 1;\n  opts = opts || {};\n  opts.objectMode = objectMode;\n  PassThrough.call(this, opts);\n  forwardDestroy(stream, this);\n  this.on('newListener', onData);\n  this.once('resume', onResume);\n  this._hasListener = true;\n}\n\ninherits(Cloneable, PassThrough);\n\nfunction onData(event, listener) {\n  if (event === 'data' || event === 'readable') {\n    this._hasListener = false;\n    this.removeListener('newListener', onData);\n    this.removeListener('resume', onResume);\n    p.nextTick(clonePiped, this);\n  }\n}\n\nfunction onResume() {\n  this._hasListener = false;\n  this.removeListener('newListener', onData);\n  p.nextTick(clonePiped, this);\n}\n\nCloneable.prototype.clone = function () {\n  if (!this._original) {\n    throw new Error('already started');\n  }\n\n  this._clonesCount++; // the events added by the clone should not count\n  // for starting the flow\n\n  this.removeListener('newListener', onData);\n  var clone = new Clone(this);\n\n  if (this._hasListener) {\n    this.on('newListener', onData);\n  }\n\n  return clone;\n};\n\nCloneable.prototype._destroy = function (err, cb) {\n  if (!err) {\n    this.push(null);\n    this.end();\n    this.emit('close');\n  }\n\n  p.nextTick(cb, err);\n};\n\nfunction forwardDestroy(src, dest) {\n  src.on('error', destroy);\n  src.on('close', onClose);\n\n  function destroy(err) {\n    src.removeListener('close', onClose);\n    dest.destroy(err);\n  }\n\n  function onClose() {\n    dest.end();\n  }\n}\n\nfunction clonePiped(that) {\n  if (--that._clonesCount === 0 && !that._readableState.destroyed) {\n    that._original.pipe(that);\n\n    that._original = undefined;\n  }\n}\n\nfunction Clone(parent, opts) {\n  if (!(this instanceof Clone)) {\n    return new Clone(parent, opts);\n  }\n\n  var objectMode = parent._readableState.objectMode;\n  opts = opts || {};\n  opts.objectMode = objectMode;\n  this.parent = parent;\n  PassThrough.call(this, opts);\n  forwardDestroy(parent, this);\n  parent.pipe(this); // the events added by the clone should not count\n  // for starting the flow\n  // so we add the newListener handle after we are done\n\n  this.on('newListener', onDataClone);\n  this.on('resume', onResumeClone);\n}\n\nfunction onDataClone(event, listener) {\n  // We start the flow once all clones are piped or destroyed\n  if (event === 'data' || event === 'readable' || event === 'close') {\n    p.nextTick(clonePiped, this.parent);\n    this.removeListener('newListener', onDataClone);\n  }\n}\n\nfunction onResumeClone() {\n  this.removeListener('newListener', onDataClone);\n  p.nextTick(clonePiped, this.parent);\n}\n\ninherits(Clone, PassThrough);\n\nClone.prototype.clone = function () {\n  return this.parent.clone();\n};\n\nCloneable.isCloneable = function (stream) {\n  return stream instanceof Cloneable || stream instanceof Clone;\n};\n\nClone.prototype._destroy = function (err, cb) {\n  if (!err) {\n    this.push(null);\n    this.end();\n    this.emit('close');\n  }\n\n  p.nextTick(cb, err);\n};\n\nmodule.exports = Cloneable;","map":{"version":3,"sources":["C:/frontend/node_modules/cloneable-readable/index.js"],"names":["PassThrough","require","inherits","p","Cloneable","stream","opts","objectMode","_readableState","_original","_clonesCount","call","forwardDestroy","on","onData","once","onResume","_hasListener","event","listener","removeListener","nextTick","clonePiped","prototype","clone","Error","Clone","_destroy","err","cb","push","end","emit","src","dest","destroy","onClose","that","destroyed","pipe","undefined","parent","onDataClone","onResumeClone","isCloneable","module","exports"],"mappings":"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","sourcesContent":["'use strict'\r\n\r\nvar PassThrough = require('readable-stream').PassThrough\r\nvar inherits = require('inherits')\r\nvar p = require('process-nextick-args')\r\n\r\nfunction Cloneable (stream, opts) {\r\n  if (!(this instanceof Cloneable)) {\r\n    return new Cloneable(stream, opts)\r\n  }\r\n\r\n  var objectMode = stream._readableState.objectMode\r\n  this._original = stream\r\n  this._clonesCount = 1\r\n\r\n  opts = opts || {}\r\n  opts.objectMode = objectMode\r\n\r\n  PassThrough.call(this, opts)\r\n\r\n  forwardDestroy(stream, this)\r\n\r\n  this.on('newListener', onData)\r\n  this.once('resume', onResume)\r\n\r\n  this._hasListener = true\r\n}\r\n\r\ninherits(Cloneable, PassThrough)\r\n\r\nfunction onData (event, listener) {\r\n  if (event === 'data' || event === 'readable') {\r\n    this._hasListener = false\r\n    this.removeListener('newListener', onData)\r\n    this.removeListener('resume', onResume)\r\n    p.nextTick(clonePiped, this)\r\n  }\r\n}\r\n\r\nfunction onResume () {\r\n  this._hasListener = false\r\n  this.removeListener('newListener', onData)\r\n  p.nextTick(clonePiped, this)\r\n}\r\n\r\nCloneable.prototype.clone = function () {\r\n  if (!this._original) {\r\n    throw new Error('already started')\r\n  }\r\n\r\n  this._clonesCount++\r\n\r\n  // the events added by the clone should not count\r\n  // for starting the flow\r\n  this.removeListener('newListener', onData)\r\n  var clone = new Clone(this)\r\n  if (this._hasListener) {\r\n    this.on('newListener', onData)\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nCloneable.prototype._destroy = function (err, cb) {\r\n  if (!err) {\r\n    this.push(null)\r\n    this.end()\r\n    this.emit('close')\r\n  }\r\n\r\n  p.nextTick(cb, err)\r\n}\r\n\r\nfunction forwardDestroy (src, dest) {\r\n  src.on('error', destroy)\r\n  src.on('close', onClose)\r\n\r\n  function destroy (err) {\r\n    src.removeListener('close', onClose)\r\n    dest.destroy(err)\r\n  }\r\n\r\n  function onClose () {\r\n    dest.end()\r\n  }\r\n}\r\n\r\nfunction clonePiped (that) {\r\n  if (--that._clonesCount === 0 && !that._readableState.destroyed) {\r\n    that._original.pipe(that)\r\n    that._original = undefined\r\n  }\r\n}\r\n\r\nfunction Clone (parent, opts) {\r\n  if (!(this instanceof Clone)) {\r\n    return new Clone(parent, opts)\r\n  }\r\n\r\n  var objectMode = parent._readableState.objectMode\r\n\r\n  opts = opts || {}\r\n  opts.objectMode = objectMode\r\n\r\n  this.parent = parent\r\n\r\n  PassThrough.call(this, opts)\r\n\r\n  forwardDestroy(parent, this)\r\n\r\n  parent.pipe(this)\r\n\r\n  // the events added by the clone should not count\r\n  // for starting the flow\r\n  // so we add the newListener handle after we are done\r\n  this.on('newListener', onDataClone)\r\n  this.on('resume', onResumeClone)\r\n}\r\n\r\nfunction onDataClone (event, listener) {\r\n  // We start the flow once all clones are piped or destroyed\r\n  if (event === 'data' || event === 'readable' || event === 'close') {\r\n    p.nextTick(clonePiped, this.parent)\r\n    this.removeListener('newListener', onDataClone)\r\n  }\r\n}\r\n\r\nfunction onResumeClone () {\r\n  this.removeListener('newListener', onDataClone)\r\n  p.nextTick(clonePiped, this.parent)\r\n}\r\n\r\ninherits(Clone, PassThrough)\r\n\r\nClone.prototype.clone = function () {\r\n  return this.parent.clone()\r\n}\r\n\r\nCloneable.isCloneable = function (stream) {\r\n  return stream instanceof Cloneable || stream instanceof Clone\r\n}\r\n\r\nClone.prototype._destroy = function (err, cb) {\r\n  if (!err) {\r\n    this.push(null)\r\n    this.end()\r\n    this.emit('close')\r\n  }\r\n\r\n  p.nextTick(cb, err)\r\n}\r\n\r\nmodule.exports = Cloneable\r\n"]},"metadata":{},"sourceType":"script"}