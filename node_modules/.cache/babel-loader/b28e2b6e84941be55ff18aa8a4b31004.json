{"ast":null,"code":"/*!\r\n * array-last <https://github.com/jonschlinkert/array-last>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\nvar isNumber = require('is-number');\n\nmodule.exports = function last(arr, n) {\n  if (!Array.isArray(arr)) {\n    throw new Error('expected the first argument to be an array');\n  }\n\n  var len = arr.length;\n\n  if (len === 0) {\n    return null;\n  }\n\n  n = isNumber(n) ? +n : 1;\n\n  if (n === 1) {\n    return arr[len - 1];\n  }\n\n  var res = new Array(n);\n\n  while (n--) {\n    res[n] = arr[--len];\n  }\n\n  return res;\n};","map":{"version":3,"sources":["C:/frontend/node_modules/array-last/index.js"],"names":["isNumber","require","module","exports","last","arr","n","Array","isArray","Error","len","length","res"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,GAAd,EAAmBC,CAAnB,EAAsB;AACrC,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAL,EAAyB;AACvB,UAAM,IAAII,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,MAAIC,GAAG,GAAGL,GAAG,CAACM,MAAd;;AACA,MAAID,GAAG,KAAK,CAAZ,EAAe;AACb,WAAO,IAAP;AACD;;AAEDJ,EAAAA,CAAC,GAAGN,QAAQ,CAACM,CAAD,CAAR,GAAc,CAACA,CAAf,GAAmB,CAAvB;;AACA,MAAIA,CAAC,KAAK,CAAV,EAAa;AACX,WAAOD,GAAG,CAACK,GAAG,GAAG,CAAP,CAAV;AACD;;AAED,MAAIE,GAAG,GAAG,IAAIL,KAAJ,CAAUD,CAAV,CAAV;;AACA,SAAOA,CAAC,EAAR,EAAY;AACVM,IAAAA,GAAG,CAACN,CAAD,CAAH,GAASD,GAAG,CAAC,EAAEK,GAAH,CAAZ;AACD;;AACD,SAAOE,GAAP;AACD,CApBD","sourcesContent":["/*!\r\n * array-last <https://github.com/jonschlinkert/array-last>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\nvar isNumber = require('is-number');\r\n\r\nmodule.exports = function last(arr, n) {\r\n  if (!Array.isArray(arr)) {\r\n    throw new Error('expected the first argument to be an array');\r\n  }\r\n\r\n  var len = arr.length;\r\n  if (len === 0) {\r\n    return null;\r\n  }\r\n\r\n  n = isNumber(n) ? +n : 1;\r\n  if (n === 1) {\r\n    return arr[len - 1];\r\n  }\r\n\r\n  var res = new Array(n);\r\n  while (n--) {\r\n    res[n] = arr[--len];\r\n  }\r\n  return res;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}