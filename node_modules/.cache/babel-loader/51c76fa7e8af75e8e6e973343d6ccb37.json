{"ast":null,"code":"import _classCallCheck from\"C:/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';var AuthenticationService=/*#__PURE__*/function(){function AuthenticationService(){_classCallCheck(this,AuthenticationService);}_createClass(AuthenticationService,[{key:\"executeJwtAuthenticationService\",value:// send username, password to the SERVER\nfunction executeJwtAuthenticationService(username,password){return axios.post('/authenticate',{username:username,password:password});}},{key:\"executeHelloService\",value:function executeHelloService(){//console.log(\"===executeHelloService===\")\nreturn axios.get('/hello');}},{key:\"registerSuccessfulLoginForJwt\",value:function registerSuccessfulLoginForJwt(username,token){//console.log(\"===registerSuccessfulLoginForJwt===\")\nlocalStorage.setItem('token',token);localStorage.setItem('authenticatedUser',username);// sessionStorage.setItem('authenticatedUser', username)\n//this.setupAxiosInterceptors(this.createJWTToken(token))\nthis.setupAxiosInterceptors();}},{key:\"createJWTToken\",value:function createJWTToken(token){return'Bearer '+token;}},{key:\"setupAxiosInterceptors\",value:function setupAxiosInterceptors(){axios.interceptors.request.use(function(config){var token=localStorage.getItem('token');if(token){config.headers['Authorization']='Bearer '+token;}// config.headers['Content-Type'] = 'application/json';\nreturn config;},function(error){Promise.reject(error);});}},{key:\"logout\",value:function logout(){//sessionStorage.removeItem('authenticatedUser');\nlocalStorage.removeItem(\"authenticatedUser\");localStorage.removeItem(\"token\");}},{key:\"isUserLoggedIn\",value:function isUserLoggedIn(){var token=localStorage.getItem('token');if(token){return true;}return false;}},{key:\"getLoggedInUserName\",value:function getLoggedInUserName(){//let user = sessionStorage.getItem('authenticatedUser')\nvar user=localStorage.getItem('authenticatedUser');if(user===null)return'';return user;}}]);return AuthenticationService;}();export default new AuthenticationService();","map":{"version":3,"sources":["C:/frontend/src/jwtlogin/AuthenticationService.js"],"names":["axios","AuthenticationService","username","password","post","get","token","localStorage","setItem","setupAxiosInterceptors","interceptors","request","use","config","getItem","headers","error","Promise","reject","removeItem","user"],"mappings":"kQAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,qB,wLACF;AACA,yCAAgCC,QAAhC,CAA0CC,QAA1C,CAAoD,CAChD,MAAOH,CAAAA,KAAK,CAACI,IAAN,CAAW,eAAX,CAA4B,CAC/BF,QAAQ,CAARA,QAD+B,CAE/BC,QAAQ,CAARA,QAF+B,CAA5B,CAAP,CAIH,C,mCAED,8BAAsB,CAClB;AACA,MAAOH,CAAAA,KAAK,CAACK,GAAN,CAAU,QAAV,CAAP,CACH,C,6CAED,uCAA8BH,QAA9B,CAAwCI,KAAxC,CAA+C,CAC3C;AACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,KAA9B,EACAC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAA0CN,QAA1C,EACA;AACA;AACA,KAAKO,sBAAL,GACH,C,8BAED,wBAAeH,KAAf,CAAsB,CAClB,MAAO,UAAYA,KAAnB,CACH,C,sCAED,iCAAyB,CACrBN,KAAK,CAACU,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,SAAAC,MAAM,CAAI,CACN,GAAMP,CAAAA,KAAK,CAAGC,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAd,CACA,GAAIR,KAAJ,CAAW,CACPO,MAAM,CAACE,OAAP,CAAe,eAAf,EAAkC,UAAYT,KAA9C,CACH,CACD;AACA,MAAOO,CAAAA,MAAP,CACH,CARL,CASI,SAAAG,KAAK,CAAI,CACLC,OAAO,CAACC,MAAR,CAAeF,KAAf,EACH,CAXL,EAYH,C,sBAED,iBAAS,CACL;AACAT,YAAY,CAACY,UAAb,CAAwB,mBAAxB,EACAZ,YAAY,CAACY,UAAb,CAAwB,OAAxB,EACH,C,8BAED,yBAAiB,CACb,GAAMb,CAAAA,KAAK,CAAGC,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAd,CACA,GAAIR,KAAJ,CAAW,CACP,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,C,mCAED,8BAAsB,CAClB;AACA,GAAIc,CAAAA,IAAI,CAAGb,YAAY,CAACO,OAAb,CAAqB,mBAArB,CAAX,CACA,GAAGM,IAAI,GAAG,IAAV,CAAgB,MAAO,EAAP,CAChB,MAAOA,CAAAA,IAAP,CACH,C,qCAGL,cAAe,IAAInB,CAAAA,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\n\r\nclass AuthenticationService {\r\n    // send username, password to the SERVER\r\n    executeJwtAuthenticationService(username, password) {\r\n        return axios.post('/authenticate', {\r\n            username,\r\n            password\r\n        })\r\n    }\r\n\r\n    executeHelloService() {\r\n        //console.log(\"===executeHelloService===\")\r\n        return axios.get('/hello');        \r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(username, token) {\r\n        //console.log(\"===registerSuccessfulLoginForJwt===\")\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('authenticatedUser', username);\r\n        // sessionStorage.setItem('authenticatedUser', username)\r\n        //this.setupAxiosInterceptors(this.createJWTToken(token))\r\n        this.setupAxiosInterceptors();\r\n    }\r\n\r\n    createJWTToken(token) {\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n    setupAxiosInterceptors() {\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = 'Bearer ' + token;\r\n                }\r\n                // config.headers['Content-Type'] = 'application/json';\r\n                return config;\r\n            },\r\n            error => {\r\n                Promise.reject(error)\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        //sessionStorage.removeItem('authenticatedUser');\r\n        localStorage.removeItem(\"authenticatedUser\");\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        //let user = sessionStorage.getItem('authenticatedUser')\r\n        let user = localStorage.getItem('authenticatedUser');\r\n        if(user===null) return '';\r\n        return user;\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}