{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend\\\\src\\\\views\\\\examples\\\\BoardRead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Button, Input } from \"reactstrap\";\nimport moment from 'moment'; // 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\n\nimport 'moment/locale/ko';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoardRead() {\n  _s();\n\n  const {\n    num\n  } = useParams();\n  const [Board, setBoard] = useState({\n    idx: \"\",\n    title: \"\",\n    content: \"\",\n    board_date: \"\",\n    id: \"\",\n    views: \"\"\n  });\n  const [Commentlist, setCommentList] = useState([]);\n  const [Comment, setComment] = useState({\n    idx: \"\",\n    title: \"\",\n    content: \"\",\n    comment_date: \"\",\n    board_id: \"\",\n    comment_id: \"\",\n    board_no: \"\",\n    views: \"\"\n  }); //let pageHeader = React.createRef();\n\n  React.useEffect(() => {\n    axios.get('http://localhost:8080/api/board/' + num).then(function (response) {\n      setBoard(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:8080/api/getCommentById/' + num).then(function (response) {\n      console.log(response.data);\n      setCommentList(response.data);\n      console.log(Commentlist);\n    }).catch(function (error) {\n      console.log(error);\n    }); // document.body.classList.add(\"boardread/:num\");\n    // document.body.classList.add(\"sidebar-collapse\");\n    // document.documentElement.classList.remove(\"nav-open\");\n    // window.scrollTo(0, 0);\n    // document.body.scrollTop = 0;\n    // return function cleanup() {\n    //   document.body.classList.remove(\"boardread/:num\");\n    //   document.body.classList.remove(\"sidebar-collapse\");\n    // };\n  }, []);\n\n  const f3 = async () => {\n    window.location.href = 'http://localhost:3000/boardinput/' + Board.idx;\n  };\n\n  const f4 = async () => {\n    console.log(Board); //삭제/board/{no}\n\n    axios.delete('http://localhost:8080/api/board/' + num).then(function (response) {\n      window.location.href = 'http://localhost:3000/board-page';\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const comment = () => {\n    if (Comment != null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-10 offset-md-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"comment-textarea\",\n              type: \"text\",\n              placeholder: \"\\uB313\\uAE00\",\n              name: \"answer\",\n              value: this.state.answer,\n              onChange: this.changeanswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"main-btn\",\n              onClick: this.createComment,\n              children: \"\\uB313\\uAE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    }\n  }; //alert(Board.title);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header-image\",\n        style: {\n          backgroundImage: \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\"\n        } //ref={pageHeader}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-center\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"\\u3131\\u3154\\u3145\\u3163\\u314D\\u314F\\u3134\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: Board.title,\n              name: \"title\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: Board.content,\n              type: \"textarea\",\n              name: \"content\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            className: \"btn-view\",\n            color: \"black\",\n            href: \"../board-page\",\n            size: \"5px\",\n            children: \"\\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            className: \"btn-board\",\n            color: \"black\" // href=\"\"\n            ,\n            onClick: f4,\n            size: \"5px\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            className: \"btn-board\",\n            color: \"black\" // href=\"\"\n            ,\n            onClick: f3,\n            size: \"5px\",\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BoardRead, \"7zHbAQ5CnTAyukZnJ4B8C3yHaSg=\", false, function () {\n  return [useParams];\n});\n\n_c = BoardRead;\nexport default BoardRead;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardRead\");","map":{"version":3,"sources":["C:/frontend/src/views/examples/BoardRead.js"],"names":["React","useState","axios","Container","Button","Input","moment","useParams","BoardRead","num","Board","setBoard","idx","title","content","board_date","id","views","Commentlist","setCommentList","Comment","setComment","comment_date","board_id","comment_id","board_no","useEffect","get","then","response","data","catch","error","console","log","f3","window","location","href","f4","delete","comment","state","answer","changeanswer","createComment","backgroundImage","require","default"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\"\r\nimport axios from \"axios\";\r\nimport {Container, Button, Input } from \"reactstrap\";\r\nimport moment from 'moment';\r\n// 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\r\nimport 'moment/locale/ko';\r\nimport { useParams } from \"react-router-dom\";\r\nfunction BoardRead() {\r\n    const {num} = useParams(); \r\n    \r\n    const [Board, setBoard] = useState({\r\n    idx: \"\",\r\n    title: \"\",\r\n    content: \"\",\r\n    board_date: \"\",\r\n    id: \"\",\r\n    views: \"\"\r\n}\r\n     );\r\n     const[Commentlist,setCommentList] = useState([])\r\n     const [Comment, setComment] = useState({\r\n      idx: \"\",\r\n      title: \"\",\r\n      content: \"\",\r\n      comment_date: \"\",\r\n      board_id: \"\",\r\n      comment_id: \"\",\r\n      board_no: \"\",\r\n      views: \"\"\r\n  }\r\n       );\r\n     //let pageHeader = React.createRef();\r\n\r\n\r\n     React.useEffect(() => {\r\n        axios.get('http://localhost:8080/api/board/'+num)\r\n        .then(function (response) {\r\n            setBoard(response.data);\r\n      \r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n        axios.get('http://localhost:8080/api/getCommentById/'+num)\r\n        .then(function (response) {\r\n          console.log(response.data)\r\n          setCommentList(response.data)\r\n          console.log(Commentlist)\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n   \r\n        // document.body.classList.add(\"boardread/:num\");\r\n        // document.body.classList.add(\"sidebar-collapse\");\r\n        // document.documentElement.classList.remove(\"nav-open\");\r\n        // window.scrollTo(0, 0);\r\n        // document.body.scrollTop = 0;\r\n        // return function cleanup() {\r\n        //   document.body.classList.remove(\"boardread/:num\");\r\n        //   document.body.classList.remove(\"sidebar-collapse\");\r\n        // };\r\n      }, []);\r\n\r\n     const f3 = async () => {\r\n        \r\n        window.location.href ='http://localhost:3000/boardinput/'+Board.idx\r\n      }\r\n      const f4 = async () => {\r\n        console.log(Board);\r\n        //삭제/board/{no}\r\n        axios.delete('http://localhost:8080/api/board/'+num)\r\n        .then(function (response) {\r\n          window.location.href ='http://localhost:3000/board-page'\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n   \r\n      }\r\n\r\n\r\n     const comment= ()=> {\r\n        if (Comment != null) {\r\n            return (\r\n                <div>\r\n                    <div className=\"card col-md-10 offset-md-1\" >\r\n\r\n                        <div className=\"row\" >\r\n\r\n                            <textarea className=\"comment-textarea\"\r\n                                type=\"text\"\r\n                                placeholder=\"댓글\" name=\"answer\"\r\n                                value={this.state.answer}\r\n                                onChange={this.changeanswer}\r\n                            />\r\n                            <button className=\"main-btn\" onClick={this.createComment} >댓글</button>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/* {\r\n                        comments.map(\r\n                            comment =>\r\n                                <div key={comment} className=\"card col-md-10 offset-md-1\">\r\n                                    <div className=\"row\"  >\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp; <h5>{comment.comment_id}</h5> &nbsp;  &nbsp; &nbsp; {this.returnDate(comment.comment_date)}\r\n                                        <br />\r\n                                        <div style={{ position: \"absolute\", top: \"0px\", right: \"5%\" }}>\r\n                                            <a onClick={() => this.updateComment(comment.comment_date, comment.comment_id, comment.answer, comment.comment_like, comment.comment_no, this.state.id,)}><img src={heart} style={{ width: \"20px\", height: \"20px\", marginBottom: \"3px\" }} alt='heart' ></img>{comment.comment_like}</a>\r\n\r\n                                        &nbsp;&nbsp;&nbsp;\r\n                                        {this.checkidcomment(comment.comment_id, comment.comment_no)}\r\n                                        </div>\r\n                                    </div>\r\n                                    {comment.answer}\r\n\r\n                                    {comment.comement_id}<br />\r\n                                </div>\r\n                        )\r\n                    } */}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n      //alert(Board.title);\r\n    return(\r\n        <div>\r\n<div className=\"page-header\">\r\n        <div\r\n          className=\"page-header-image\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\",\r\n          }}\r\n          //ref={pageHeader}\r\n        ></div>\r\n        <div className=\"content-center\">\r\n          <Container>\r\n            <h1 className=\"title\">ㄱㅔㅅㅣㅍㅏㄴ</h1><br/>\r\n            <h2><Input\r\n            placeholder={Board.title}\r\n            name=\"title\"  disabled\r\n            ></Input></h2>\r\n            \r\n            <h2><Input\r\n       \r\n            placeholder={Board.content}\r\n            type=\"textarea\"\r\n            name=\"content\" disabled\r\n            /></h2>\r\n            <br/>\r\n            <Button\r\n            block\r\n            className=\"btn-view\"\r\n            color=\"black\"\r\n            href=\"../board-page\"\r\n            size=\"5px\"\r\n            >\r\n                목록\r\n                </Button>\r\n                <Button\r\n            block\r\n            className=\"btn-board\"\r\n            color=\"black\"\r\n            // href=\"\"\r\n            onClick={f4}\r\n            size=\"5px\"\r\n            >\r\n                삭제\r\n                </Button>\r\n            <Button\r\n            block\r\n            className=\"btn-board\"\r\n            color=\"black\"\r\n            // href=\"\"\r\n            onClick={f3}\r\n            size=\"5px\"\r\n            >\r\n                수정\r\n                </Button>\r\n              \r\n          </Container>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default BoardRead;"]},"metadata":{},"sourceType":"module"}