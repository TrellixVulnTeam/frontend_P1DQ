{"ast":null,"code":"var Readable = require('readable-stream/readable');\n\nvar util = require('util');\n\nfunction isReadable(stream) {\n  if (typeof stream.pipe !== 'function') {\n    return false;\n  }\n\n  if (!stream.readable) {\n    return false;\n  }\n\n  if (typeof stream._read !== 'function') {\n    return false;\n  }\n\n  if (!stream._readableState) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction addStream(streams, stream) {\n  if (!isReadable(stream)) {\n    throw new Error('All input streams must be readable');\n  }\n\n  var self = this;\n  stream._buffer = [];\n  stream.on('readable', function () {\n    var chunk = stream.read();\n\n    while (chunk) {\n      if (this === streams[0]) {\n        self.push(chunk);\n      } else {\n        this._buffer.push(chunk);\n      }\n\n      chunk = stream.read();\n    }\n  });\n  stream.on('end', function () {\n    for (var stream = streams[0]; stream && stream._readableState.ended; stream = streams[0]) {\n      while (stream._buffer.length) {\n        self.push(stream._buffer.shift());\n      }\n\n      streams.shift();\n    }\n\n    if (!streams.length) {\n      self.push(null);\n    }\n  });\n  stream.on('error', this.emit.bind(this, 'error'));\n  streams.push(stream);\n}\n\nfunction OrderedStreams(streams, options) {\n  if (!(this instanceof OrderedStreams)) {\n    return new OrderedStreams(streams, options);\n  }\n\n  streams = streams || [];\n  options = options || {};\n  options.objectMode = true;\n  Readable.call(this, options);\n\n  if (!Array.isArray(streams)) {\n    streams = [streams];\n  }\n\n  if (!streams.length) {\n    return this.push(null); // no streams, close\n  }\n\n  var addStreamBinded = addStream.bind(this, []);\n  streams.forEach(function (item) {\n    if (Array.isArray(item)) {\n      item.forEach(addStreamBinded);\n    } else {\n      addStreamBinded(item);\n    }\n  });\n}\n\nutil.inherits(OrderedStreams, Readable);\n\nOrderedStreams.prototype._read = function () {};\n\nmodule.exports = OrderedStreams;","map":{"version":3,"sources":["C:/frontend/node_modules/ordered-read-streams/index.js"],"names":["Readable","require","util","isReadable","stream","pipe","readable","_read","_readableState","addStream","streams","Error","self","_buffer","on","chunk","read","push","ended","length","shift","emit","bind","OrderedStreams","options","objectMode","call","Array","isArray","addStreamBinded","forEach","item","inherits","prototype","module","exports"],"mappings":"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","sourcesContent":["var Readable = require('readable-stream/readable');\r\nvar util = require('util');\r\n\r\nfunction isReadable(stream) {\r\n  if (typeof stream.pipe !== 'function') {\r\n    return false;\r\n  }\r\n\r\n  if (!stream.readable) {\r\n    return false;\r\n  }\r\n\r\n  if (typeof stream._read !== 'function') {\r\n    return false;\r\n  }\r\n\r\n  if (!stream._readableState) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction addStream (streams, stream) {\r\n  if (!isReadable(stream)) {\r\n    throw new Error('All input streams must be readable');\r\n  }\r\n\r\n  var self = this;\r\n\r\n  stream._buffer = [];\r\n\r\n  stream.on('readable', function () {\r\n    var chunk = stream.read();\r\n    while (chunk) {\r\n      if (this === streams[0]) {\r\n        self.push(chunk);\r\n      } else {\r\n        this._buffer.push(chunk);\r\n      }\r\n      chunk = stream.read();\r\n    }\r\n  });\r\n\r\n  stream.on('end', function () {\r\n    for (var stream = streams[0];\r\n      stream && stream._readableState.ended;\r\n      stream = streams[0]) {\r\n      while (stream._buffer.length) {\r\n        self.push(stream._buffer.shift());\r\n      }\r\n\r\n      streams.shift();\r\n    }\r\n\r\n    if (!streams.length) {\r\n      self.push(null);\r\n    }\r\n  });\r\n\r\n  stream.on('error', this.emit.bind(this, 'error'));\r\n\r\n  streams.push(stream);\r\n}\r\n\r\nfunction OrderedStreams (streams, options) {\r\n  if (!(this instanceof(OrderedStreams))) {\r\n    return new OrderedStreams(streams, options);\r\n  }\r\n\r\n  streams = streams || [];\r\n  options = options || {};\r\n\r\n  options.objectMode = true;\r\n\r\n  Readable.call(this, options);\r\n\r\n  if (!Array.isArray(streams)) {\r\n    streams = [streams];\r\n  }\r\n  if (!streams.length) {\r\n    return this.push(null);  // no streams, close\r\n  }\r\n\r\n  var addStreamBinded = addStream.bind(this, []);\r\n\r\n  streams.forEach(function (item) {\r\n    if (Array.isArray(item)) {\r\n      item.forEach(addStreamBinded);\r\n    } else {\r\n      addStreamBinded(item);\r\n    }\r\n  });\r\n}\r\nutil.inherits(OrderedStreams, Readable);\r\n\r\nOrderedStreams.prototype._read = function () {};\r\n\r\nmodule.exports = OrderedStreams;\r\n"]},"metadata":{},"sourceType":"script"}