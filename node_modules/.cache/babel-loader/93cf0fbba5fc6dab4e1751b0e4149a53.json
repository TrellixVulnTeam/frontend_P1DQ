{"ast":null,"code":"import _regeneratorRuntime from\"C:/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import axios from\"axios\";import{Container,Button,Input}from\"reactstrap\";import moment from'moment';// 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\nimport'moment/locale/ko';import{useParams}from\"react-router-dom\";import AuthenticationService from\"../../jwtlogin/AuthenticationService.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BoardInput(){var setupAxiosInterceptors=AuthenticationService.setupAxiosInterceptors();var nowTime=moment().format('YYYY-MM-DD HH:mm:ss');var _useParams=useParams(),mode=_useParams.mode;var _useState=useState({idx:null,title:\"\",content:\"\",board_date:nowTime,id:\"2monthsago\",view:\"0\"}),_useState2=_slicedToArray(_useState,2),Board=_useState2[0],setBoard=_useState2[1];var pageHeader=/*#__PURE__*/React.createRef();React.useEffect(function(){if(mode!='new'){axios.get('/api/board/'+mode).then(function(response){//console.log(response)\nsetBoard(response.data);}).catch(function(error){//console.log(error);\n});}},[]);var f3=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(mode==='new'){//new\nif(!Board.title||!Board.content){window.confirm(\"빈칸을 채워주세요.\");}else axios.post('/api/board',Board).then(function(response){//console.log(response);\nwindow.location.href='../../boardread/'+response.data.idx;}).catch(function(error){//console.log(error);\n});}else{//update        \nif(!Board.title){window.confirm(\"제목을 채워주세요.\");}if(!Board.content){window.confirm(\"내용을 채워주세요.\");}else axios.put('/api/board/'+Board.idx,Board).then(function(response){window.location.href='../../boardread/'+Board.idx;}).catch(function(error){//console.log(error);\n});}case 1:case\"end\":return _context.stop();}}},_callee);}));return function f3(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"page-header-image\",style:{backgroundImage:\"url(\"+require(\"assets/img/bg4.jpg\").default+\")\"},ref:pageHeader}),/*#__PURE__*/_jsx(\"div\",{className:\"content-center\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(Input,{placeholder:\"\\uC81C\\uBAA9...\",maxlength:\"14\",type:\"text\",name:\"title\",class:\"form-control2\",value:Board.title,onChange:function onChange(_ref2){var value=_ref2.target.value;return setBoard({idx:Board.idx,title:value,content:Board.content,board_date:Board.board_date,id:Board.id,view:Board.view});}})}),/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(Input,{placeholder:\"\\uB0B4\\uC6A9...\",type:\"textarea\",name:\"content\",value:Board.content,onChange:function onChange(_ref3){var value=_ref3.target.value;return setBoard({idx:Board.idx,title:Board.title,content:value,board_date:Board.board_date,id:Board.id,view:Board.view});}})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{className:\"btn-viewboard\",color:\"black\",href:\"../board-page\",size:\"5px\",children:\"\\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(Button,{className:\"btn-inputboard\",color:\"black\"// href=\"\"\n,onClick:f3,size:\"5px\",children:\"\\uB4F1\\uB85D\"})]})})]});}export default BoardInput;","map":{"version":3,"sources":["C:/frontend/src/views/examples/BoardInput.js"],"names":["React","useState","axios","Container","Button","Input","moment","useParams","AuthenticationService","BoardInput","setupAxiosInterceptors","nowTime","format","mode","idx","title","content","board_date","id","view","Board","setBoard","pageHeader","createRef","useEffect","get","then","response","data","catch","error","f3","window","confirm","post","location","href","put","backgroundImage","require","default","value","target"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\"\r\nimport axios from \"axios\";\r\nimport {Container, Button, Input } from \"reactstrap\";\r\nimport moment from 'moment';\r\n// 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\r\nimport 'moment/locale/ko';\r\nimport { useParams } from \"react-router-dom\";\r\nimport AuthenticationService from \"../../jwtlogin/AuthenticationService.js\";\r\nfunction BoardInput() {\r\n   \r\nconst setupAxiosInterceptors=AuthenticationService.setupAxiosInterceptors();\r\nconst nowTime = moment().format('YYYY-MM-DD HH:mm:ss'); \r\n\r\nconst {mode} = useParams(); \r\n\r\n    const [Board, setBoard] = useState({\r\n      idx:null,\r\n         title: \"\",\r\n         content: \"\",\r\n         board_date: nowTime,\r\n         id: \"2monthsago\",        \r\n         view: \"0\"\r\n}\r\n      );\r\n   \r\n     let pageHeader = React.createRef();\r\n\r\n     React.useEffect(() => {\r\n       if(mode != 'new'){\r\n      axios.get('/api/board/'+mode)\r\n      .then(function (response) {\r\n        //console.log(response)\r\n          setBoard(response.data);\r\n    \r\n      })\r\n      .catch(function (error) {\r\n        //console.log(error);\r\n      });}\r\n\r\n    }, []);\r\n  \r\n     const f3 = async () => {\r\n       if(mode==='new'){ //new\r\n        if(!Board.title || !Board.content){\r\n        window.confirm(\"빈칸을 채워주세요.\");\r\n        }\r\n        else\r\n        axios.post('/api/board', Board)\r\n      .then(function (response) {\r\n        //console.log(response);\r\n        window.location.href ='../../boardread/'+response.data.idx\r\n      })\r\n      .catch(function (error) { \r\n        //console.log(error);\r\n      });\r\n    }else { //update        \r\n      if(!Board.title){\r\n      window.confirm(\"제목을 채워주세요.\");}\r\n      if(!Board.content){\r\n        window.confirm(\"내용을 채워주세요.\");}\r\n      else\r\n      axios.put('/api/board/'+Board.idx, Board)\r\n      .then(function (response) {\r\n        window.location.href ='../../boardread/'+Board.idx\r\n      })\r\n      .catch(function (error) {\r\n        //console.log(error);\r\n      });\r\n    }\r\n\r\n      }\r\n\r\n\r\n    return(\r\n<div className=\"page-header\">\r\n        <div\r\n          className=\"page-header-image\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\",\r\n          }}\r\n          ref={pageHeader}\r\n        ></div>\r\n        <div className=\"content-center\">\r\n          <Container>\r\n            <h1 className=\"title\">자유게시판</h1><br/>\r\n            <h2><Input\r\n            placeholder=\"제목...\"\r\n            maxlength=\"14\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            class=\"form-control2\"\r\n            value={Board.title}\r\n            onChange={({ target: { value } }) => \r\n             setBoard({\r\n               idx:Board.idx,\r\n                 title: value,\r\n                 content: Board.content,\r\n                 board_date: Board.board_date,\r\n                id: Board.id,        \r\n                view: Board.view\r\n        })\r\n \r\n    }\r\n\r\n            ></Input></h2>\r\n            \r\n            <h2><Input\r\n            placeholder=\"내용...\"\r\n            type=\"textarea\"\r\n            name=\"content\"\r\n            value={Board.content}\r\n            onChange={({ target: { value } }) => setBoard({\r\n              idx:Board.idx,\r\n                title: Board.title,\r\n                content: value,\r\n                board_date: Board.board_date,\r\n                id: Board.id,        \r\n                view: Board.view\r\n       })}\r\n            ></Input></h2>\r\n            <br/>\r\n            <Button\r\n            className=\"btn-viewboard\"\r\n            color=\"black\"\r\n            href=\"../board-page\"\r\n            size=\"5px\"\r\n            >\r\n                목록\r\n                </Button>\r\n            <Button\r\n            className=\"btn-inputboard\"\r\n            color=\"black\"\r\n            // href=\"\"\r\n            onClick={f3}\r\n            size=\"5px\"\r\n            >\r\n                등록\r\n                </Button>\r\n                \r\n          </Container>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BoardInput;"]},"metadata":{},"sourceType":"module"}