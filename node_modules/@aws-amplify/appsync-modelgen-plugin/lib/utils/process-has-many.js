"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.processHasManyConnection = void 0;
const process_connections_1 = require("./process-connections");
const process_connections_v2_1 = require("./process-connections-v2");
function processHasManyConnection(field, model, modelMap, connectionDirective) {
    const otherSide = modelMap[field.type];
    const connectionFields = connectionDirective.arguments.fields || [];
    const otherSideField = process_connections_v2_1.getConnectedFieldV2(field, model, otherSide, connectionDirective.name);
    const isNewField = !otherSide.fields.includes(otherSideField);
    const isConnectingFieldAutoCreated = connectionFields.length === 0;
    if (!isNewField) {
        if (field.isList && !otherSideField.isList) {
            return {
                kind: process_connections_1.CodeGenConnectionType.HAS_MANY,
                associatedWith: otherSideField,
                isConnectingFieldAutoCreated,
                connectedModel: otherSide,
            };
        }
    }
    else {
        if (field.isList) {
            const connectionFieldName = process_connections_1.makeConnectionAttributeName(model.name, field.name);
            const existingConnectionField = otherSide.fields.find(f => f.name === connectionFieldName);
            return {
                kind: process_connections_1.CodeGenConnectionType.HAS_MANY,
                connectedModel: otherSide,
                isConnectingFieldAutoCreated,
                associatedWith: existingConnectionField || {
                    name: connectionFieldName,
                    type: 'ID',
                    isList: false,
                    isNullable: true,
                    directives: [],
                },
            };
        }
        else {
            throw new Error("A field with hasMany must be a list type");
        }
    }
}
exports.processHasManyConnection = processHasManyConnection;
//# sourceMappingURL=process-has-many.js.map