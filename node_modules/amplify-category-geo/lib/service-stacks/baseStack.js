"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseStack = void 0;
const cdk = __importStar(require("@aws-cdk/core"));
const prepare_app_1 = require("@aws-cdk/core/lib/private/prepare-app");
class BaseStack extends cdk.Stack {
    constructor(scope, id) {
        super(scope, id);
        this.parameters = new Map();
        this.resources = new Map();
    }
    constructInputParameters(parameterNames) {
        let parametersMap = new Map();
        parameterNames.forEach(parameterName => {
            const inputParameter = new cdk.CfnParameter(this, parameterName, { type: 'String' });
            parametersMap.set(parameterName, inputParameter);
        });
        return parametersMap;
    }
    toCloudFormation() {
        prepare_app_1.prepareApp(this);
        const cfn = this._toCloudFormation();
        return cfn;
    }
}
exports.BaseStack = BaseStack;
//# sourceMappingURL=baseStack.js.map